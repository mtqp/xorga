%!PS-Adobe-2.0
%%Title: resultados.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Tue Jun 29 17:58:25 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (resultados.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Daniel Ignacio Grosso)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 29 17:58:25 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
630 1056 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
630 1692 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
630 2328 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2328 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
630 2964 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2964 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
630 3600 M
63 0 V
6269 0 R
-63 0 V
stroke
546 3600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
630 4236 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35)]
] -46.7 MRshow
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1422 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1422 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2213 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2213 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
3005 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3005 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
3796 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3796 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
4588 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4588 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
5379 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
6171 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6171 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 700)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (tiempo \(segundos\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3796 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (cantidad de nodos)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
714 4109 N
0 700 V
903 0 V
0 -700 V
-903 0 V
Z stroke
714 4809 M
903 0 V
1.000 UP
stroke
LT0
LTb
1050 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (20%)]
] -46.7 MRshow
LT0
638 420 Pls
701 420 Pls
765 420 Pls
828 420 Pls
891 420 Pls
955 420 Pls
1018 420 Pls
1081 420 Pls
1144 420 Pls
1208 420 Pls
1271 420 Pls
1334 420 Pls
1398 420 Pls
1461 420 Pls
1524 420 Pls
1588 420 Pls
1651 420 Pls
1714 420 Pls
1778 420 Pls
1841 420 Pls
1904 420 Pls
1968 420 Pls
2031 420 Pls
2094 420 Pls
2158 420 Pls
2221 420 Pls
2284 420 Pls
2348 420 Pls
2411 420 Pls
2474 420 Pls
2538 420 Pls
2601 420 Pls
2664 420 Pls
2727 420 Pls
2791 420 Pls
2854 420 Pls
2917 420 Pls
2981 420 Pls
3044 420 Pls
3107 420 Pls
3171 420 Pls
3234 421 Pls
3297 421 Pls
3361 421 Pls
3424 421 Pls
3487 422 Pls
3551 423 Pls
3614 501 Pls
3677 436 Pls
3741 526 Pls
3804 493 Pls
3867 523 Pls
3931 561 Pls
3994 529 Pls
4057 495 Pls
4121 519 Pls
4184 570 Pls
4247 564 Pls
4310 534 Pls
4374 629 Pls
4437 533 Pls
4500 679 Pls
4564 612 Pls
4627 538 Pls
4690 603 Pls
4754 604 Pls
4817 718 Pls
4880 685 Pls
4944 631 Pls
5007 678 Pls
5070 615 Pls
5134 662 Pls
5197 612 Pls
5260 649 Pls
5324 667 Pls
5387 757 Pls
5450 688 Pls
5514 652 Pls
5577 753 Pls
5640 757 Pls
5704 748 Pls
5767 1062 Pls
5830 870 Pls
5893 963 Pls
5957 826 Pls
6020 772 Pls
6083 855 Pls
6147 821 Pls
6210 1081 Pls
6273 911 Pls
6337 1024 Pls
6400 781 Pls
6463 1216 Pls
6527 1319 Pls
6590 1020 Pls
6653 893 Pls
6717 1331 Pls
6780 1067 Pls
6843 1307 Pls
6907 936 Pls
1333 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
1050 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (40%)]
] -46.7 MRshow
LT1
638 420 Crs
701 420 Crs
765 420 Crs
828 420 Crs
891 420 Crs
955 420 Crs
1018 420 Crs
1081 420 Crs
1144 420 Crs
1208 420 Crs
1271 420 Crs
1334 420 Crs
1398 420 Crs
1461 420 Crs
1524 420 Crs
1588 420 Crs
1651 420 Crs
1714 420 Crs
1778 420 Crs
1841 420 Crs
1904 420 Crs
1968 420 Crs
2031 420 Crs
2094 420 Crs
2158 420 Crs
2221 420 Crs
2284 420 Crs
2348 420 Crs
2411 420 Crs
2474 420 Crs
2538 420 Crs
2601 421 Crs
2664 420 Crs
2727 420 Crs
2791 421 Crs
2854 421 Crs
2917 421 Crs
2981 484 Crs
3044 422 Crs
3107 421 Crs
3171 421 Crs
3234 501 Crs
3297 500 Crs
3361 517 Crs
3424 517 Crs
3487 527 Crs
3551 601 Crs
3614 625 Crs
3677 624 Crs
3741 630 Crs
3804 562 Crs
3867 616 Crs
3931 640 Crs
3994 664 Crs
4057 634 Crs
4121 597 Crs
4184 721 Crs
4247 701 Crs
4310 643 Crs
4374 705 Crs
4437 681 Crs
4500 826 Crs
4564 798 Crs
4627 908 Crs
4690 729 Crs
4754 701 Crs
4817 995 Crs
4880 938 Crs
4944 891 Crs
5007 817 Crs
5070 803 Crs
5134 892 Crs
5197 804 Crs
5260 864 Crs
5324 912 Crs
5387 1046 Crs
5450 931 Crs
5514 883 Crs
5577 1078 Crs
5640 1095 Crs
5704 1053 Crs
5767 1102 Crs
5830 1383 Crs
5893 1482 Crs
5957 1141 Crs
6020 1106 Crs
6083 1134 Crs
6147 1707 Crs
6210 1211 Crs
6273 1393 Crs
6337 1619 Crs
6400 1135 Crs
6463 1991 Crs
6527 1665 Crs
6590 1382 Crs
6653 1361 Crs
6717 1502 Crs
6780 1645 Crs
6843 1768 Crs
6907 1425 Crs
1333 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
1050 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (60%)]
] -46.7 MRshow
LT2
638 420 Star
701 420 Star
765 420 Star
828 420 Star
891 420 Star
955 420 Star
1018 420 Star
1081 420 Star
1144 420 Star
1208 420 Star
1271 420 Star
1334 420 Star
1398 420 Star
1461 420 Star
1524 420 Star
1588 420 Star
1651 420 Star
1714 420 Star
1778 420 Star
1841 420 Star
1904 420 Star
1968 420 Star
2031 420 Star
2094 420 Star
2158 420 Star
2221 420 Star
2284 420 Star
2348 420 Star
2411 420 Star
2474 513 Star
2538 494 Star
2601 491 Star
2664 420 Star
2727 486 Star
2791 493 Star
2854 538 Star
2917 518 Star
2981 504 Star
3044 508 Star
3107 498 Star
3171 566 Star
3234 545 Star
3297 596 Star
3361 565 Star
3424 561 Star
3487 569 Star
3551 688 Star
3614 594 Star
3677 655 Star
3741 645 Star
3804 630 Star
3867 707 Star
3931 747 Star
3994 800 Star
4057 643 Star
4121 883 Star
4184 863 Star
4247 838 Star
4310 752 Star
4374 836 Star
4437 800 Star
4500 1015 Star
4564 905 Star
4627 1144 Star
4690 1078 Star
4754 1364 Star
4817 1274 Star
4880 1195 Star
4944 1107 Star
5007 997 Star
5070 992 Star
5134 1123 Star
5197 997 Star
5260 1078 Star
5324 1149 Star
5387 1168 Star
5450 1173 Star
5514 1113 Star
5577 1394 Star
5640 1289 Star
5704 1926 Star
5767 1332 Star
5830 1575 Star
5893 1415 Star
5957 1888 Star
6020 1441 Star
6083 1668 Star
6147 2313 Star
6210 2401 Star
6273 2548 Star
6337 2217 Star
6400 1492 Star
6463 2774 Star
6527 2063 Star
6590 2458 Star
6653 2510 Star
6717 2412 Star
6780 2234 Star
6843 2374 Star
6907 3086 Star
1333 4459 Star
1.000 UP
1.000 UL
LT3
LTb
1050 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (80%)]
] -46.7 MRshow
LT3
638 420 Box
701 420 Box
765 420 Box
828 420 Box
891 420 Box
955 420 Box
1018 420 Box
1081 420 Box
1144 420 Box
1208 420 Box
1271 420 Box
1334 420 Box
1398 420 Box
1461 420 Box
1524 420 Box
1588 420 Box
1651 420 Box
1714 420 Box
1778 420 Box
1841 420 Box
1904 420 Box
1968 420 Box
2031 420 Box
2094 420 Box
2158 420 Box
2221 420 Box
2284 420 Box
2348 420 Box
2411 420 Box
2474 529 Box
2538 517 Box
2601 514 Box
2664 420 Box
2727 506 Box
2791 509 Box
2854 547 Box
2917 527 Box
2981 606 Box
3044 537 Box
3107 524 Box
3171 613 Box
3234 579 Box
3297 709 Box
3361 632 Box
3424 604 Box
3487 616 Box
3551 660 Box
3614 817 Box
3677 821 Box
3741 841 Box
3804 907 Box
3867 800 Box
3931 850 Box
3994 919 Box
4057 799 Box
4121 994 Box
4184 1000 Box
4247 976 Box
4310 863 Box
4374 1407 Box
4437 921 Box
4500 1115 Box
4564 1064 Box
4627 1282 Box
4690 1289 Box
4754 1070 Box
4817 1481 Box
4880 1389 Box
4944 1326 Box
5007 1179 Box
5070 1182 Box
5134 1833 Box
5197 1188 Box
5260 1293 Box
5324 1393 Box
5387 2163 Box
5450 1412 Box
5514 1343 Box
5577 1581 Box
5640 1561 Box
5704 1626 Box
5767 2188 Box
5830 2953 Box
5893 1922 Box
5957 1924 Box
6020 1778 Box
6083 2074 Box
6147 2911 Box
6210 3021 Box
6273 3226 Box
6337 2814 Box
6400 1852 Box
6463 2244 Box
6527 2576 Box
6590 3010 Box
6653 2978 Box
6717 3009 Box
6780 2813 Box
6843 2973 Box
6907 3929 Box
1333 4319 Box
1.000 UP
1.000 UL
LT4
LTb
1050 4179 M
[ [(Helvetica) 140.0 0.0 true true 0 (100%)]
] -46.7 MRshow
LT4
638 420 BoxF
701 420 BoxF
765 420 BoxF
828 420 BoxF
891 420 BoxF
955 420 BoxF
1018 420 BoxF
1081 420 BoxF
1144 420 BoxF
1208 420 BoxF
1271 420 BoxF
1334 420 BoxF
1398 420 BoxF
1461 420 BoxF
1524 420 BoxF
1588 420 BoxF
1651 420 BoxF
1714 420 BoxF
1778 420 BoxF
1841 420 BoxF
1904 420 BoxF
1968 420 BoxF
2031 420 BoxF
2094 420 BoxF
2158 420 BoxF
2221 420 BoxF
2284 484 BoxF
2348 494 BoxF
2411 420 BoxF
2474 517 BoxF
2538 534 BoxF
2601 538 BoxF
2664 421 BoxF
2727 527 BoxF
2791 531 BoxF
2854 576 BoxF
2917 552 BoxF
2981 653 BoxF
3044 565 BoxF
3107 550 BoxF
3171 604 BoxF
3234 616 BoxF
3297 668 BoxF
3361 709 BoxF
3424 747 BoxF
3487 663 BoxF
3551 715 BoxF
3614 911 BoxF
3677 844 BoxF
3741 945 BoxF
3804 838 BoxF
3867 894 BoxF
3931 956 BoxF
3994 1037 BoxF
4057 887 BoxF
4121 1274 BoxF
4184 1129 BoxF
4247 1537 BoxF
4310 968 BoxF
4374 1419 BoxF
4437 1041 BoxF
4500 1280 BoxF
4564 1191 BoxF
4627 1368 BoxF
4690 1490 BoxF
4754 1224 BoxF
4817 1720 BoxF
4880 1419 BoxF
4944 1542 BoxF
5007 1728 BoxF
5070 1373 BoxF
5134 1585 BoxF
5197 1380 BoxF
5260 1506 BoxF
5324 2286 BoxF
5387 2572 BoxF
5450 2753 BoxF
5514 1575 BoxF
5577 1813 BoxF
5640 1833 BoxF
5704 1911 BoxF
5767 2622 BoxF
5830 2754 BoxF
5893 2268 BoxF
5957 2282 BoxF
6020 2124 BoxF
6083 2488 BoxF
6147 3525 BoxF
6210 3655 BoxF
6273 3913 BoxF
6337 3417 BoxF
6400 3279 BoxF
6463 4181 BoxF
6527 3086 BoxF
6590 3615 BoxF
6653 3834 BoxF
6717 3613 BoxF
6780 3393 BoxF
6843 3564 BoxF
6907 4563 BoxF
1333 4179 BoxF
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
