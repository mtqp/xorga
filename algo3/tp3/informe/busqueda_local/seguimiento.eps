%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 42 20 553 771
%%Creator: yExport 1.1.0.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, June 29, 2010 6:39:33 PM ART
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
538 791 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
538.000 0.00000 l
538.000 791.000 l
0.00000 791.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 538 791 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 330.000 268.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-330.000 -268.000 m
208.000 -268.000 l
208.000 523.000 l
-330.000 523.000 l
-330.000 -268.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 330.000 268.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 330.000 268.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 330.000 268.000 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
-278.624 -203.738 m
-278.624 -205.551 l
-275.014 -205.551 l
-275.014 -219.801 l
-278.624 -218.895 l
-278.624 -220.754 l
-272.592 -222.254 l
-272.592 -205.551 l
-268.983 -205.551 l
-268.983 -203.738 l
-278.624 -203.738 l
h
f
0 J
1.45000 M
newpath
-239.485 -212.948 m
-239.485 -193.619 -255.155 -177.948 -274.485 -177.948  c
-293.815 -177.948 -309.485 -193.619 -309.485 -212.948  c
-309.485 -232.278 -293.815 -247.948 -274.485 -247.948  c
-255.155 -247.948 -239.485 -232.278 -239.485 -212.948  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-142.311 -203.738 m
-142.311 -205.848 l
-141.613 -207.483 -140.196 -209.264 -138.061 -211.191  c
-136.686 -212.426 l
-134.915 -214.030 -134.030 -215.624 -134.030 -217.207  c
-134.030 -218.217 -134.332 -219.012 -134.936 -219.590  c
-135.540 -220.168 -136.374 -220.457 -137.436 -220.457  c
-138.686 -220.457 -140.160 -219.973 -141.858 -219.004  c
-141.858 -221.129 l
-140.254 -221.879 -138.665 -222.254 -137.092 -222.254  c
-135.394 -222.254 -134.032 -221.798 -133.006 -220.887  c
-131.980 -219.975 -131.467 -218.770 -131.467 -217.270  c
-131.467 -216.186 -131.728 -215.225 -132.249 -214.387  c
-132.769 -213.548 -133.733 -212.530 -135.139 -211.332  c
-136.061 -210.535 l
-137.988 -208.900 -139.103 -207.337 -139.405 -205.848  c
-131.561 -205.848 l
-131.561 -203.738 l
-142.311 -203.738 l
h
f
0 J
1.45000 M
newpath
-101.485 -212.948 m
-101.485 -193.619 -117.155 -177.948 -136.485 -177.948  c
-155.815 -177.948 -171.485 -193.619 -171.485 -212.948  c
-171.485 -232.278 -155.815 -247.948 -136.485 -247.948  c
-117.155 -247.948 -101.485 -232.278 -101.485 -212.948  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-272.983 -86.7383 m
-272.983 -91.8477 l
-281.108 -91.8477 l
-281.108 -93.6758 l
-272.983 -104.801 l
-270.717 -104.801 l
-270.717 -93.8164 l
-268.295 -93.8164 l
-268.295 -91.8477 l
-270.717 -91.8477 l
-270.717 -86.7383 l
-272.983 -86.7383 l
h
-278.749 -93.8164 m
-272.811 -93.8164 l
-272.811 -101.848 l
-278.749 -93.8164 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-239.485 -95.9485 m
-239.485 -76.6185 -255.155 -60.9485 -274.485 -60.9485  c
-293.815 -60.9485 -309.485 -76.6185 -309.485 -95.9485  c
-309.485 -115.278 -293.815 -130.948 -274.485 -130.948  c
-255.155 -130.948 -239.485 -115.278 -239.485 -95.9485  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-141.842 -86.8789 m
-141.842 -89.1133 l
-140.124 -88.4362 -138.769 -88.0977 -137.780 -88.0977  c
-136.624 -88.0977 -135.686 -88.4336 -134.967 -89.1055  c
-134.249 -89.7774 -133.889 -90.6445 -133.889 -91.7070  c
-133.889 -94.2487 -135.670 -95.5195 -139.233 -95.5195  c
-140.170 -95.5195 l
-140.170 -97.1445 l
-139.342 -97.1445 l
-135.999 -97.1445 -134.327 -98.3216 -134.327 -100.676  c
-134.327 -102.530 -135.426 -103.457 -137.624 -103.457  c
-138.832 -103.457 -140.160 -103.118 -141.608 -102.441  c
-141.608 -104.535 l
-140.181 -105.014 -138.795 -105.254 -137.452 -105.254  c
-133.764 -105.254 -131.920 -103.858 -131.920 -101.066  c
-131.920 -98.9414 -133.176 -97.4310 -135.686 -96.5352  c
-132.769 -95.8581 -131.311 -94.2591 -131.311 -91.7383  c
-131.311 -90.0404 -131.874 -88.7070 -132.999 -87.7383  c
-134.124 -86.7695 -135.665 -86.2852 -137.624 -86.2852  c
-138.738 -86.2852 -140.144 -86.4831 -141.842 -86.8789  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-101.485 -95.9485 m
-101.485 -76.6185 -117.155 -60.9485 -136.485 -60.9485  c
-155.815 -60.9485 -171.485 -76.6185 -171.485 -95.9485  c
-171.485 -115.278 -155.815 -130.948 -136.485 -130.948  c
-117.155 -130.948 -101.485 -115.278 -101.485 -95.9485  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-212.342 -6.41016 m
-212.342 -8.56641 l
-211.155 -8.08725 -210.019 -7.84766 -208.936 -7.84766  c
-207.749 -7.84766 -206.814 -8.19662 -206.131 -8.89454  c
-205.449 -9.59246 -205.108 -10.5560 -205.108 -11.7852  c
-205.108 -14.4935 -206.978 -15.8477 -210.717 -15.8477  c
-211.134 -15.8477 -211.577 -15.8216 -212.045 -15.7695  c
-212.045 -24.5508 l
-202.905 -24.5508 l
-202.905 -22.4570 l
-209.936 -22.4570 l
-209.936 -17.6914 l
-207.613 -17.6914 -205.801 -17.1602 -204.499 -16.0977  c
-203.196 -15.0352 -202.545 -13.5560 -202.545 -11.6602  c
-202.545 -9.91016 -203.137 -8.53516 -204.319 -7.53516  c
-205.501 -6.53516 -207.144 -6.03516 -209.249 -6.03516  c
-210.165 -6.03516 -211.196 -6.16016 -212.342 -6.41016  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-172.485 -15.6985 m
-172.485 3.63147 -188.155 19.3015 -207.485 19.3015  c
-226.815 19.3015 -242.485 3.63147 -242.485 -15.6985  c
-242.485 -35.0285 -226.815 -50.6985 -207.485 -50.6985  c
-188.155 -50.6985 -172.485 -35.0285 -172.485 -15.6985  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-278.092 69.1014 m
-276.946 67.6119 -275.504 66.8671 -273.764 66.8671  c
-272.181 66.8671 -270.887 67.3905 -269.881 68.4374  c
-268.876 69.4843 -268.374 70.8254 -268.374 72.4608  c
-268.374 74.3358 -268.939 75.8801 -270.069 77.0936  c
-271.199 78.3072 -272.629 78.9139 -274.358 78.9139  c
-276.347 78.9139 -277.905 78.1119 -279.030 76.5077  c
-280.155 74.9035 -280.717 72.6796 -280.717 69.8358  c
-280.717 66.7004 -280.071 64.2655 -278.780 62.5311  c
-277.488 60.7968 -275.670 59.9296 -273.327 59.9296  c
-272.254 59.9296 -270.910 60.1587 -269.295 60.6171  c
-269.295 62.7108 l
-271.004 62.0650 -272.400 61.7421 -273.483 61.7421  c
-276.556 61.7421 -278.092 64.1952 -278.092 69.1014  c
h
-270.795 72.9921 m
-270.795 71.6275 -271.103 70.5546 -271.717 69.7733  c
-272.332 68.9921 -273.181 68.6014 -274.264 68.6014  c
-275.285 68.6014 -276.163 68.9426 -276.897 69.6249  c
-277.631 70.3072 -277.999 71.1275 -277.999 72.0858  c
-277.999 73.5962 -277.650 74.8098 -276.952 75.7264  c
-276.254 76.6431 -275.332 77.1014 -274.186 77.1014  c
-273.155 77.1014 -272.332 76.7290 -271.717 75.9843  c
-271.103 75.2395 -270.795 74.2421 -270.795 72.9921  c
h
f
0 J
1.45000 M
newpath
-239.485 69.2506 m
-239.485 88.5806 -255.155 104.251 -274.485 104.251  c
-293.815 104.251 -309.485 88.5806 -309.485 69.2506  c
-309.485 49.9206 -293.815 34.2506 -274.485 34.2506  c
-255.155 34.2506 -239.485 49.9206 -239.485 69.2506  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-150.823 78.4608 m
-150.594 77.0546 -150.261 75.8384 -149.823 74.8124  c
-149.386 73.7863 -148.615 72.3775 -147.511 70.5858  c
-142.573 62.6483 l
-151.886 62.6483 l
-151.886 60.3983 l
-140.276 60.3983 l
-140.276 62.6483 l
-144.912 69.4816 -147.505 74.7525 -148.057 78.4608  c
-150.823 78.4608 l
h
f
0 J
1.45000 M
newpath
-111.685 69.2506 m
-111.685 88.5806 -127.355 104.251 -146.685 104.251  c
-166.015 104.251 -181.685 88.5806 -181.685 69.2506  c
-181.685 49.9206 -166.015 34.2506 -146.685 34.2506  c
-127.355 34.2506 -111.685 49.9206 -111.685 69.2506  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-114.639 -16.3320 m
-116.410 -17.5612 -117.295 -18.9206 -117.295 -20.4102  c
-117.295 -21.7747 -116.793 -22.8841 -115.788 -23.7383  c
-114.782 -24.5925 -113.478 -25.0195 -111.874 -25.0195  c
-110.384 -25.0195 -109.176 -24.6576 -108.249 -23.9336  c
-107.321 -23.2096 -106.858 -22.2695 -106.858 -21.1133  c
-106.858 -19.3633 -107.983 -17.7695 -110.233 -16.3320  c
-107.504 -14.9987 -106.139 -13.2747 -106.139 -11.1602  c
-106.139 -9.64975 -106.712 -8.41798 -107.858 -7.46485  c
-109.004 -6.51173 -110.478 -6.03516 -112.280 -6.03516  c
-114.061 -6.03516 -115.499 -6.48568 -116.592 -7.38673  c
-117.686 -8.28777 -118.233 -9.46746 -118.233 -10.9258  c
-118.233 -13.0925 -117.035 -14.8945 -114.639 -16.3320  c
h
-111.577 -17.0820 m
-109.889 -18.1862 -109.045 -19.4206 -109.045 -20.7852  c
-109.045 -21.5039 -109.327 -22.0872 -109.889 -22.5352  c
-110.452 -22.9831 -111.191 -23.2070 -112.108 -23.2070  c
-112.993 -23.2070 -113.715 -22.9883 -114.272 -22.5508  c
-114.829 -22.1133 -115.108 -21.5508 -115.108 -20.8633  c
-115.108 -20.1862 -114.858 -19.5794 -114.358 -19.0430  c
-113.858 -18.5065 -112.931 -17.8529 -111.577 -17.0820  c
h
-113.327 -15.3477 m
-114.295 -14.5977 -114.954 -13.9440 -115.303 -13.3867  c
-115.652 -12.8294 -115.827 -12.1393 -115.827 -11.3164  c
-115.827 -10.2747 -115.493 -9.43621 -114.827 -8.80079  c
-114.160 -8.16537 -113.280 -7.84766 -112.186 -7.84766  c
-111.134 -7.84766 -110.277 -8.11850 -109.616 -8.66016  c
-108.954 -9.20183 -108.624 -9.91016 -108.624 -10.7852  c
-108.624 -11.4831 -108.829 -12.0742 -109.241 -12.5586  c
-109.652 -13.0430 -110.446 -13.6341 -111.624 -14.3320  c
-113.327 -15.3477 l
h
f
0 J
1.45000 M
newpath
-77.4851 -15.6985 m
-77.4851 3.63147 -93.1551 19.3015 -112.485 19.3015  c
-131.815 19.3015 -147.485 3.63147 -147.485 -15.6985  c
-147.485 -35.0285 -131.815 -50.6985 -112.485 -50.6985  c
-93.1551 -50.6985 -77.4851 -35.0285 -77.4851 -15.6985  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-13.6235 -203.738 m
-13.6235 -205.551 l
-10.0142 -205.551 l
-10.0142 -219.801 l
-13.6235 -218.895 l
-13.6235 -220.754 l
-7.59228 -222.254 l
-7.59228 -205.551 l
-3.98290 -205.551 l
-3.98290 -203.738 l
-13.6235 -203.738 l
h
f
0 J
1.45000 M
newpath
25.5149 -212.948 m
25.5149 -193.619 9.84487 -177.948 -9.48510 -177.948  c
-28.8151 -177.948 -44.4851 -193.619 -44.4851 -212.948  c
-44.4851 -232.278 -28.8151 -247.948 -9.48510 -247.948  c
9.84487 -247.948 25.5149 -232.278 25.5149 -212.948  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
122.689 -203.738 m
122.689 -205.848 l
123.387 -207.483 124.804 -209.264 126.939 -211.191  c
128.314 -212.426 l
130.085 -214.030 130.970 -215.624 130.970 -217.207  c
130.970 -218.217 130.668 -219.012 130.064 -219.590  c
129.460 -220.168 128.626 -220.457 127.564 -220.457  c
126.314 -220.457 124.840 -219.973 123.142 -219.004  c
123.142 -221.129 l
124.746 -221.879 126.335 -222.254 127.908 -222.254  c
129.606 -222.254 130.968 -221.798 131.994 -220.887  c
133.020 -219.975 133.533 -218.770 133.533 -217.270  c
133.533 -216.186 133.272 -215.225 132.751 -214.387  c
132.231 -213.548 131.267 -212.530 129.861 -211.332  c
128.939 -210.535 l
127.012 -208.900 125.897 -207.337 125.595 -205.848  c
133.439 -205.848 l
133.439 -203.738 l
122.689 -203.738 l
h
f
0 J
1.45000 M
newpath
163.515 -212.948 m
163.515 -193.619 147.845 -177.948 128.515 -177.948  c
109.185 -177.948 93.5149 -193.619 93.5149 -212.948  c
93.5149 -232.278 109.185 -247.948 128.515 -247.948  c
147.845 -247.948 163.515 -232.278 163.515 -212.948  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-7.98290 -86.7383 m
-7.98290 -91.8477 l
-16.1079 -91.8477 l
-16.1079 -93.6758 l
-7.98290 -104.801 l
-5.71728 -104.801 l
-5.71728 -93.8164 l
-3.29540 -93.8164 l
-3.29540 -91.8477 l
-5.71728 -91.8477 l
-5.71728 -86.7383 l
-7.98290 -86.7383 l
h
-13.7485 -93.8164 m
-7.81103 -93.8164 l
-7.81103 -101.848 l
-13.7485 -93.8164 l
h
f
0 J
1.45000 M
newpath
25.5149 -95.9485 m
25.5149 -76.6185 9.84487 -60.9485 -9.48510 -60.9485  c
-28.8151 -60.9485 -44.4851 -76.6185 -44.4851 -95.9485  c
-44.4851 -115.278 -28.8151 -130.948 -9.48510 -130.948  c
9.84487 -130.948 25.5149 -115.278 25.5149 -95.9485  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
123.158 -86.8789 m
123.158 -89.1133 l
124.876 -88.4362 126.231 -88.0977 127.220 -88.0977  c
128.376 -88.0977 129.314 -88.4336 130.033 -89.1055  c
130.751 -89.7774 131.111 -90.6445 131.111 -91.7070  c
131.111 -94.2487 129.330 -95.5195 125.767 -95.5195  c
124.830 -95.5195 l
124.830 -97.1445 l
125.658 -97.1445 l
129.001 -97.1445 130.673 -98.3216 130.673 -100.676  c
130.673 -102.530 129.574 -103.457 127.376 -103.457  c
126.168 -103.457 124.840 -103.118 123.392 -102.441  c
123.392 -104.535 l
124.819 -105.014 126.205 -105.254 127.548 -105.254  c
131.236 -105.254 133.080 -103.858 133.080 -101.066  c
133.080 -98.9414 131.824 -97.4310 129.314 -96.5352  c
132.231 -95.8581 133.689 -94.2591 133.689 -91.7383  c
133.689 -90.0404 133.126 -88.7070 132.001 -87.7383  c
130.876 -86.7695 129.335 -86.2852 127.376 -86.2852  c
126.262 -86.2852 124.856 -86.4831 123.158 -86.8789  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
163.515 -95.9485 m
163.515 -76.6185 147.845 -60.9485 128.515 -60.9485  c
109.185 -60.9485 93.5149 -76.6185 93.5149 -95.9485  c
93.5149 -115.278 109.185 -130.948 128.515 -130.948  c
147.845 -130.948 163.515 -115.278 163.515 -95.9485  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
52.6577 -6.41016 m
52.6577 -8.56641 l
53.8452 -8.08725 54.9806 -7.84766 56.0640 -7.84766  c
57.2515 -7.84766 58.1864 -8.19662 58.8687 -8.89454  c
59.5510 -9.59246 59.8921 -10.5560 59.8921 -11.7852  c
59.8921 -14.4935 58.0223 -15.8477 54.2827 -15.8477  c
53.8661 -15.8477 53.4233 -15.8216 52.9546 -15.7695  c
52.9546 -24.5508 l
62.0952 -24.5508 l
62.0952 -22.4570 l
55.0640 -22.4570 l
55.0640 -17.6914 l
57.3869 -17.6914 59.1994 -17.1602 60.5015 -16.0977  c
61.8036 -15.0352 62.4546 -13.5560 62.4546 -11.6602  c
62.4546 -9.91016 61.8635 -8.53516 60.6812 -7.53516  c
59.4989 -6.53516 57.8556 -6.03516 55.7515 -6.03516  c
54.8348 -6.03516 53.8036 -6.16016 52.6577 -6.41016  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
92.5149 -15.6985 m
92.5149 3.63147 76.8449 19.3015 57.5149 19.3015  c
38.1849 19.3015 22.5149 3.63147 22.5149 -15.6985  c
22.5149 -35.0285 38.1849 -50.6985 57.5149 -50.6985  c
76.8449 -50.6985 92.5149 -35.0285 92.5149 -15.6985  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-16.0923 69.6696 m
-14.9464 68.1801 -13.5037 67.4353 -11.7642 67.4353  c
-10.1808 67.4353 -8.88655 67.9587 -7.88134 69.0056  c
-6.87613 70.0525 -6.37353 71.3936 -6.37353 73.0290  c
-6.37353 74.9040 -6.93863 76.4483 -8.06884 77.6618  c
-9.19905 78.8754 -10.6287 79.4821 -12.3579 79.4821  c
-14.3475 79.4821 -15.9048 78.6801 -17.0298 77.0759  c
-18.1548 75.4717 -18.7173 73.2478 -18.7173 70.4040  c
-18.7173 67.2686 -18.0714 64.8337 -16.7798 63.0993  c
-15.4881 61.3650 -13.6704 60.4978 -11.3267 60.4978  c
-10.2537 60.4978 -8.90999 60.7269 -7.29540 61.1853  c
-7.29540 63.2790 l
-9.00374 62.6332 -10.3996 62.3103 -11.4829 62.3103  c
-14.5558 62.3103 -16.0923 64.7634 -16.0923 69.6696  c
h
-8.79540 73.5603 m
-8.79540 72.1957 -9.10269 71.1228 -9.71728 70.3415  c
-10.3319 69.5603 -11.1808 69.1696 -12.2642 69.1696  c
-13.2850 69.1696 -14.1626 69.5108 -14.8970 70.1931  c
-15.6313 70.8754 -15.9985 71.6957 -15.9985 72.6540  c
-15.9985 74.1644 -15.6496 75.3780 -14.9517 76.2946  c
-14.2537 77.2113 -13.3319 77.6696 -12.1860 77.6696  c
-11.1548 77.6696 -10.3319 77.2972 -9.71728 76.5525  c
-9.10269 75.8077 -8.79540 74.8103 -8.79540 73.5603  c
h
f
0 J
1.45000 M
newpath
22.5149 69.8188 m
22.5149 89.1488 6.84487 104.819 -12.4851 104.819  c
-31.8151 104.819 -47.4851 89.1488 -47.4851 69.8188  c
-47.4851 50.4888 -31.8151 34.8188 -12.4851 34.8188  c
6.84487 34.8188 22.5149 50.4888 22.5149 69.8188  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
123.376 79.0290 m
123.606 77.6228 123.939 76.4066 124.376 75.3806  c
124.814 74.3545 125.585 72.9457 126.689 71.1540  c
131.626 63.2165 l
122.314 63.2165 l
122.314 60.9665 l
133.923 60.9665 l
133.923 63.2165 l
129.288 70.0498 126.694 75.3207 126.142 79.0290  c
123.376 79.0290 l
h
f
0 J
1.45000 M
newpath
162.515 69.8188 m
162.515 89.1488 146.845 104.819 127.515 104.819  c
108.185 104.819 92.5149 89.1488 92.5149 69.8188  c
92.5149 50.4888 108.185 34.8188 127.515 34.8188  c
146.845 34.8188 162.515 50.4888 162.515 69.8188  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
150.361 -16.3320 m
148.590 -17.5612 147.705 -18.9206 147.705 -20.4102  c
147.705 -21.7747 148.207 -22.8841 149.212 -23.7383  c
150.218 -24.5925 151.522 -25.0195 153.126 -25.0195  c
154.616 -25.0195 155.824 -24.6576 156.751 -23.9336  c
157.679 -23.2096 158.142 -22.2695 158.142 -21.1133  c
158.142 -19.3633 157.017 -17.7695 154.767 -16.3320  c
157.496 -14.9987 158.861 -13.2747 158.861 -11.1602  c
158.861 -9.64975 158.288 -8.41798 157.142 -7.46485  c
155.996 -6.51173 154.522 -6.03516 152.720 -6.03516  c
150.939 -6.03516 149.501 -6.48568 148.408 -7.38673  c
147.314 -8.28777 146.767 -9.46746 146.767 -10.9258  c
146.767 -13.0925 147.965 -14.8945 150.361 -16.3320  c
h
153.423 -17.0820 m
155.111 -18.1862 155.955 -19.4206 155.955 -20.7852  c
155.955 -21.5039 155.673 -22.0872 155.111 -22.5352  c
154.548 -22.9831 153.809 -23.2070 152.892 -23.2070  c
152.007 -23.2070 151.285 -22.9883 150.728 -22.5508  c
150.171 -22.1133 149.892 -21.5508 149.892 -20.8633  c
149.892 -20.1862 150.142 -19.5794 150.642 -19.0430  c
151.142 -18.5065 152.069 -17.8529 153.423 -17.0820  c
h
151.673 -15.3477 m
150.705 -14.5977 150.046 -13.9440 149.697 -13.3867  c
149.348 -12.8294 149.173 -12.1393 149.173 -11.3164  c
149.173 -10.2747 149.507 -9.43621 150.173 -8.80079  c
150.840 -8.16537 151.720 -7.84766 152.814 -7.84766  c
153.866 -7.84766 154.723 -8.11850 155.384 -8.66016  c
156.046 -9.20183 156.376 -9.91016 156.376 -10.7852  c
156.376 -11.4831 156.171 -12.0742 155.759 -12.5586  c
155.348 -13.0430 154.554 -13.6341 153.376 -14.3320  c
151.673 -15.3477 l
h
f
0 J
1.45000 M
newpath
187.515 -15.6985 m
187.515 3.63147 171.845 19.3015 152.515 19.3015  c
133.185 19.3015 117.515 3.63147 117.515 -15.6985  c
117.515 -35.0285 133.185 -50.6985 152.515 -50.6985  c
171.845 -50.6985 187.515 -35.0285 187.515 -15.6985  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-278.624 198.327 m
-278.624 196.514 l
-275.014 196.514 l
-275.014 182.264 l
-278.624 183.170 l
-278.624 181.311 l
-272.592 179.811 l
-272.592 196.514 l
-268.983 196.514 l
-268.983 198.327 l
-278.624 198.327 l
h
f
0 J
1.45000 M
newpath
-239.485 189.116 m
-239.485 208.446 -255.155 224.116 -274.485 224.116  c
-293.815 224.116 -309.485 208.446 -309.485 189.116  c
-309.485 169.786 -293.815 154.116 -274.485 154.116  c
-255.155 154.116 -239.485 169.786 -239.485 189.116  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-142.311 198.327 m
-142.311 196.217 l
-141.613 194.582 -140.196 192.801 -138.061 190.874  c
-136.686 189.639 l
-134.915 188.035 -134.030 186.441 -134.030 184.858  c
-134.030 183.847 -134.332 183.053 -134.936 182.475  c
-135.540 181.897 -136.374 181.608 -137.436 181.608  c
-138.686 181.608 -140.160 182.092 -141.858 183.061  c
-141.858 180.936 l
-140.254 180.186 -138.665 179.811 -137.092 179.811  c
-135.394 179.811 -134.032 180.267 -133.006 181.178  c
-131.980 182.090 -131.467 183.295 -131.467 184.795  c
-131.467 185.879 -131.728 186.840 -132.249 187.678  c
-132.769 188.517 -133.733 189.535 -135.139 190.733  c
-136.061 191.530 l
-137.988 193.165 -139.103 194.728 -139.405 196.217  c
-131.561 196.217 l
-131.561 198.327 l
-142.311 198.327 l
h
f
0 J
1.45000 M
newpath
-101.485 189.116 m
-101.485 208.446 -117.155 224.116 -136.485 224.116  c
-155.815 224.116 -171.485 208.446 -171.485 189.116  c
-171.485 169.786 -155.815 154.116 -136.485 154.116  c
-117.155 154.116 -101.485 169.786 -101.485 189.116  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-272.983 315.327 m
-272.983 310.217 l
-281.108 310.217 l
-281.108 308.389 l
-272.983 297.264 l
-270.717 297.264 l
-270.717 308.249 l
-268.295 308.249 l
-268.295 310.217 l
-270.717 310.217 l
-270.717 315.327 l
-272.983 315.327 l
h
-278.749 308.249 m
-272.811 308.249 l
-272.811 300.217 l
-278.749 308.249 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-239.485 306.116 m
-239.485 325.446 -255.155 341.116 -274.485 341.116  c
-293.815 341.116 -309.485 325.446 -309.485 306.116  c
-309.485 286.786 -293.815 271.116 -274.485 271.116  c
-255.155 271.116 -239.485 286.786 -239.485 306.116  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-141.842 315.186 m
-141.842 312.952 l
-140.124 313.629 -138.769 313.967 -137.780 313.967  c
-136.624 313.967 -135.686 313.631 -134.967 312.959  c
-134.249 312.288 -133.889 311.420 -133.889 310.358  c
-133.889 307.816 -135.670 306.545 -139.233 306.545  c
-140.170 306.545 l
-140.170 304.920 l
-139.342 304.920 l
-135.999 304.920 -134.327 303.743 -134.327 301.389  c
-134.327 299.535 -135.426 298.608 -137.624 298.608  c
-138.832 298.608 -140.160 298.946 -141.608 299.624  c
-141.608 297.530 l
-140.181 297.051 -138.795 296.811 -137.452 296.811  c
-133.764 296.811 -131.920 298.207 -131.920 300.999  c
-131.920 303.124 -133.176 304.634 -135.686 305.530  c
-132.769 306.207 -131.311 307.806 -131.311 310.327  c
-131.311 312.025 -131.874 313.358 -132.999 314.327  c
-134.124 315.295 -135.665 315.780 -137.624 315.780  c
-138.738 315.780 -140.144 315.582 -141.842 315.186  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-101.485 306.116 m
-101.485 325.446 -117.155 341.116 -136.485 341.116  c
-155.815 341.116 -171.485 325.446 -171.485 306.116  c
-171.485 286.786 -155.815 271.116 -136.485 271.116  c
-117.155 271.116 -101.485 286.786 -101.485 306.116  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-212.342 395.655 m
-212.342 393.499 l
-211.155 393.978 -210.019 394.217 -208.936 394.217  c
-207.749 394.217 -206.814 393.868 -206.131 393.170  c
-205.449 392.472 -205.108 391.509 -205.108 390.280  c
-205.108 387.571 -206.978 386.217 -210.717 386.217  c
-211.134 386.217 -211.577 386.243 -212.045 386.295  c
-212.045 377.514 l
-202.905 377.514 l
-202.905 379.608 l
-209.936 379.608 l
-209.936 384.374 l
-207.613 384.374 -205.801 384.905 -204.499 385.967  c
-203.196 387.030 -202.545 388.509 -202.545 390.405  c
-202.545 392.155 -203.137 393.530 -204.319 394.530  c
-205.501 395.530 -207.144 396.030 -209.249 396.030  c
-210.165 396.030 -211.196 395.905 -212.342 395.655  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
-172.485 386.366 m
-172.485 405.696 -188.155 421.366 -207.485 421.366  c
-226.815 421.366 -242.485 405.696 -242.485 386.366  c
-242.485 367.036 -226.815 351.366 -207.485 351.366  c
-188.155 351.366 -172.485 367.036 -172.485 386.366  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-278.092 467.767 m
-276.946 466.277 -275.504 465.532 -273.764 465.532  c
-272.181 465.532 -270.887 466.056 -269.881 467.102  c
-268.876 468.149 -268.374 469.490 -268.374 471.126  c
-268.374 473.001 -268.939 474.545 -270.069 475.759  c
-271.199 476.972 -272.629 477.579 -274.358 477.579  c
-276.347 477.579 -277.905 476.777 -279.030 475.173  c
-280.155 473.569 -280.717 471.345 -280.717 468.501  c
-280.717 465.365 -280.071 462.931 -278.780 461.196  c
-277.488 459.462 -275.670 458.595 -273.327 458.595  c
-272.254 458.595 -270.910 458.824 -269.295 459.282  c
-269.295 461.376 l
-271.004 460.730 -272.400 460.407 -273.483 460.407  c
-276.556 460.407 -278.092 462.860 -278.092 467.767  c
h
-270.795 471.657 m
-270.795 470.293 -271.103 469.220 -271.717 468.438  c
-272.332 467.657 -273.181 467.267 -274.264 467.267  c
-275.285 467.267 -276.163 467.608 -276.897 468.290  c
-277.631 468.972 -277.999 469.793 -277.999 470.751  c
-277.999 472.261 -277.650 473.475 -276.952 474.392  c
-276.254 475.308 -275.332 475.767 -274.186 475.767  c
-273.155 475.767 -272.332 475.394 -271.717 474.649  c
-271.103 473.905 -270.795 472.907 -270.795 471.657  c
h
f
0 J
1.45000 M
newpath
-239.485 467.916 m
-239.485 487.246 -255.155 502.916 -274.485 502.916  c
-293.815 502.916 -309.485 487.246 -309.485 467.916  c
-309.485 448.586 -293.815 432.916 -274.485 432.916  c
-255.155 432.916 -239.485 448.586 -239.485 467.916  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-147.624 477.126 m
-147.394 475.720 -147.061 474.504 -146.624 473.477  c
-146.186 472.451 -145.415 471.043 -144.311 469.251  c
-139.374 461.313 l
-148.686 461.313 l
-148.686 459.063 l
-137.077 459.063 l
-137.077 461.313 l
-141.712 468.147 -144.306 473.418 -144.858 477.126  c
-147.624 477.126 l
h
f
0 J
1.45000 M
newpath
-108.485 467.916 m
-108.485 487.246 -124.155 502.916 -143.485 502.916  c
-162.815 502.916 -178.485 487.246 -178.485 467.916  c
-178.485 448.586 -162.815 432.916 -143.485 432.916  c
-124.155 432.916 -108.485 448.586 -108.485 467.916  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-114.639 385.733 m
-116.410 384.504 -117.295 383.144 -117.295 381.655  c
-117.295 380.290 -116.793 379.181 -115.788 378.327  c
-114.782 377.472 -113.478 377.045 -111.874 377.045  c
-110.384 377.045 -109.176 377.407 -108.249 378.131  c
-107.321 378.855 -106.858 379.795 -106.858 380.952  c
-106.858 382.702 -107.983 384.295 -110.233 385.733  c
-107.504 387.066 -106.139 388.790 -106.139 390.905  c
-106.139 392.415 -106.712 393.647 -107.858 394.600  c
-109.004 395.553 -110.478 396.030 -112.280 396.030  c
-114.061 396.030 -115.499 395.579 -116.592 394.678  c
-117.686 393.777 -118.233 392.597 -118.233 391.139  c
-118.233 388.972 -117.035 387.170 -114.639 385.733  c
h
-111.577 384.983 m
-109.889 383.879 -109.045 382.644 -109.045 381.280  c
-109.045 380.561 -109.327 379.978 -109.889 379.530  c
-110.452 379.082 -111.191 378.858 -112.108 378.858  c
-112.993 378.858 -113.715 379.077 -114.272 379.514  c
-114.829 379.952 -115.108 380.514 -115.108 381.202  c
-115.108 381.879 -114.858 382.486 -114.358 383.022  c
-113.858 383.558 -112.931 384.212 -111.577 384.983  c
h
-113.327 386.717 m
-114.295 387.467 -114.954 388.121 -115.303 388.678  c
-115.652 389.236 -115.827 389.926 -115.827 390.749  c
-115.827 391.790 -115.493 392.629 -114.827 393.264  c
-114.160 393.900 -113.280 394.217 -112.186 394.217  c
-111.134 394.217 -110.277 393.946 -109.616 393.405  c
-108.954 392.863 -108.624 392.155 -108.624 391.280  c
-108.624 390.582 -108.829 389.991 -109.241 389.506  c
-109.652 389.022 -110.446 388.431 -111.624 387.733  c
-113.327 386.717 l
h
f
0 J
1.45000 M
newpath
-77.4851 386.366 m
-77.4851 405.696 -93.1551 421.366 -112.485 421.366  c
-131.815 421.366 -147.485 405.696 -147.485 386.366  c
-147.485 367.036 -131.815 351.366 -112.485 351.366  c
-93.1551 351.366 -77.4851 367.036 -77.4851 386.366  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-13.6235 193.227 m
-13.6235 191.414 l
-10.0142 191.414 l
-10.0142 177.164 l
-13.6235 178.071 l
-13.6235 176.211 l
-7.59228 174.711 l
-7.59228 191.414 l
-3.98290 191.414 l
-3.98290 193.227 l
-13.6235 193.227 l
h
f
0 J
1.45000 M
newpath
25.5149 184.017 m
25.5149 203.347 9.84487 219.017 -9.48510 219.017  c
-28.8151 219.017 -44.4851 203.347 -44.4851 184.017  c
-44.4851 164.687 -28.8151 149.017 -9.48510 149.017  c
9.84487 149.017 25.5149 164.687 25.5149 184.017  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
122.689 193.227 m
122.689 191.118 l
123.387 189.482 124.804 187.701 126.939 185.774  c
128.314 184.539 l
130.085 182.935 130.970 181.341 130.970 179.758  c
130.970 178.748 130.668 177.953 130.064 177.375  c
129.460 176.797 128.626 176.508 127.564 176.508  c
126.314 176.508 124.840 176.993 123.142 177.961  c
123.142 175.836 l
124.746 175.086 126.335 174.711 127.908 174.711  c
129.606 174.711 130.968 175.167 131.994 176.078  c
133.020 176.990 133.533 178.196 133.533 179.696  c
133.533 180.779 133.272 181.740 132.751 182.578  c
132.231 183.417 131.267 184.435 129.861 185.633  c
128.939 186.430 l
127.012 188.065 125.897 189.628 125.595 191.118  c
133.439 191.118 l
133.439 193.227 l
122.689 193.227 l
h
f
0 J
1.45000 M
newpath
163.515 184.017 m
163.515 203.347 147.845 219.017 128.515 219.017  c
109.185 219.017 93.5149 203.347 93.5149 184.017  c
93.5149 164.687 109.185 149.017 128.515 149.017  c
147.845 149.017 163.515 164.687 163.515 184.017  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
-7.98290 310.227 m
-7.98290 305.118 l
-16.1079 305.118 l
-16.1079 303.289 l
-7.98290 292.164 l
-5.71728 292.164 l
-5.71728 303.149 l
-3.29540 303.149 l
-3.29540 305.118 l
-5.71728 305.118 l
-5.71728 310.227 l
-7.98290 310.227 l
h
-13.7485 303.149 m
-7.81103 303.149 l
-7.81103 295.118 l
-13.7485 303.149 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
25.5149 301.017 m
25.5149 320.347 9.84487 336.017 -9.48510 336.017  c
-28.8151 336.017 -44.4851 320.347 -44.4851 301.017  c
-44.4851 281.687 -28.8151 266.017 -9.48510 266.017  c
9.84487 266.017 25.5149 281.687 25.5149 301.017  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
123.158 310.086 m
123.158 307.852 l
124.876 308.529 126.231 308.868 127.220 308.868  c
128.376 308.868 129.314 308.532 130.033 307.860  c
130.751 307.188 131.111 306.321 131.111 305.258  c
131.111 302.716 129.330 301.446 125.767 301.446  c
124.830 301.446 l
124.830 299.821 l
125.658 299.821 l
129.001 299.821 130.673 298.644 130.673 296.289  c
130.673 294.435 129.574 293.508 127.376 293.508  c
126.168 293.508 124.840 293.847 123.392 294.524  c
123.392 292.430 l
124.819 291.951 126.205 291.711 127.548 291.711  c
131.236 291.711 133.080 293.107 133.080 295.899  c
133.080 298.024 131.824 299.534 129.314 300.430  c
132.231 301.107 133.689 302.706 133.689 305.227  c
133.689 306.925 133.126 308.258 132.001 309.227  c
130.876 310.196 129.335 310.680 127.376 310.680  c
126.262 310.680 124.856 310.482 123.158 310.086  c
h
f
0 J
1.45000 M
newpath
163.515 301.017 m
163.515 320.347 147.845 336.017 128.515 336.017  c
109.185 336.017 93.5149 320.347 93.5149 301.017  c
93.5149 281.687 109.185 266.017 128.515 266.017  c
147.845 266.017 163.515 281.687 163.515 301.017  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
52.6577 390.555 m
52.6577 388.399 l
53.8452 388.878 54.9806 389.118 56.0640 389.118  c
57.2515 389.118 58.1864 388.769 58.8687 388.071  c
59.5510 387.373 59.8921 386.409 59.8921 385.180  c
59.8921 382.472 58.0223 381.118 54.2827 381.118  c
53.8661 381.118 53.4233 381.144 52.9546 381.196  c
52.9546 372.414 l
62.0952 372.414 l
62.0952 374.508 l
55.0640 374.508 l
55.0640 379.274 l
57.3869 379.274 59.1994 379.805 60.5015 380.868  c
61.8036 381.930 62.4546 383.409 62.4546 385.305  c
62.4546 387.055 61.8635 388.430 60.6812 389.430  c
59.4989 390.430 57.8556 390.930 55.7515 390.930  c
54.8348 390.930 53.8036 390.805 52.6577 390.555  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
92.5149 381.267 m
92.5149 400.597 76.8449 416.267 57.5149 416.267  c
38.1849 416.267 22.5149 400.597 22.5149 381.267  c
22.5149 361.937 38.1849 346.267 57.5149 346.267  c
76.8449 346.267 92.5149 361.937 92.5149 381.267  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
-16.0923 467.767 m
-14.9464 466.277 -13.5037 465.532 -11.7642 465.532  c
-10.1808 465.532 -8.88655 466.056 -7.88134 467.102  c
-6.87613 468.149 -6.37353 469.490 -6.37353 471.126  c
-6.37353 473.001 -6.93863 474.545 -8.06884 475.759  c
-9.19905 476.972 -10.6287 477.579 -12.3579 477.579  c
-14.3475 477.579 -15.9048 476.777 -17.0298 475.173  c
-18.1548 473.569 -18.7173 471.345 -18.7173 468.501  c
-18.7173 465.365 -18.0714 462.931 -16.7798 461.196  c
-15.4881 459.462 -13.6704 458.595 -11.3267 458.595  c
-10.2537 458.595 -8.90999 458.824 -7.29540 459.282  c
-7.29540 461.376 l
-9.00374 460.730 -10.3996 460.407 -11.4829 460.407  c
-14.5558 460.407 -16.0923 462.860 -16.0923 467.767  c
h
-8.79540 471.657 m
-8.79540 470.293 -9.10269 469.220 -9.71728 468.438  c
-10.3319 467.657 -11.1808 467.267 -12.2642 467.267  c
-13.2850 467.267 -14.1626 467.608 -14.8970 468.290  c
-15.6313 468.972 -15.9985 469.793 -15.9985 470.751  c
-15.9985 472.261 -15.6496 473.475 -14.9517 474.392  c
-14.2537 475.308 -13.3319 475.767 -12.1860 475.767  c
-11.1548 475.767 -10.3319 475.394 -9.71728 474.649  c
-9.10269 473.905 -8.79540 472.907 -8.79540 471.657  c
h
f
0 J
1.45000 M
newpath
22.5149 467.916 m
22.5149 487.246 6.84487 502.916 -12.4851 502.916  c
-31.8151 502.916 -47.4851 487.246 -47.4851 467.916  c
-47.4851 448.586 -31.8151 432.916 -12.4851 432.916  c
6.84487 432.916 22.5149 448.586 22.5149 467.916  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
123.376 477.126 m
123.606 475.720 123.939 474.504 124.376 473.477  c
124.814 472.451 125.585 471.043 126.689 469.251  c
131.626 461.313 l
122.314 461.313 l
122.314 459.063 l
133.923 459.063 l
133.923 461.313 l
129.288 468.147 126.694 473.418 126.142 477.126  c
123.376 477.126 l
h
f
0 J
1.45000 M
newpath
162.515 467.916 m
162.515 487.246 146.845 502.916 127.515 502.916  c
108.185 502.916 92.5149 487.246 92.5149 467.916  c
92.5149 448.586 108.185 432.916 127.515 432.916  c
146.845 432.916 162.515 448.586 162.515 467.916  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
150.361 380.633 m
148.590 379.404 147.705 378.045 147.705 376.555  c
147.705 375.190 148.207 374.081 149.212 373.227  c
150.218 372.373 151.522 371.946 153.126 371.946  c
154.616 371.946 155.824 372.308 156.751 373.032  c
157.679 373.756 158.142 374.696 158.142 375.852  c
158.142 377.602 157.017 379.196 154.767 380.633  c
157.496 381.966 158.861 383.690 158.861 385.805  c
158.861 387.315 158.288 388.547 157.142 389.500  c
155.996 390.453 154.522 390.930 152.720 390.930  c
150.939 390.930 149.501 390.480 148.408 389.578  c
147.314 388.677 146.767 387.498 146.767 386.039  c
146.767 383.873 147.965 382.071 150.361 380.633  c
h
153.423 379.883 m
155.111 378.779 155.955 377.545 155.955 376.180  c
155.955 375.461 155.673 374.878 155.111 374.430  c
154.548 373.982 153.809 373.758 152.892 373.758  c
152.007 373.758 151.285 373.977 150.728 374.414  c
150.171 374.852 149.892 375.414 149.892 376.102  c
149.892 376.779 150.142 377.386 150.642 377.922  c
151.142 378.459 152.069 379.112 153.423 379.883  c
h
151.673 381.618 m
150.705 382.368 150.046 383.021 149.697 383.578  c
149.348 384.136 149.173 384.826 149.173 385.649  c
149.173 386.690 149.507 387.529 150.173 388.164  c
150.840 388.800 151.720 389.118 152.814 389.118  c
153.866 389.118 154.723 388.847 155.384 388.305  c
156.046 387.763 156.376 387.055 156.376 386.180  c
156.376 385.482 156.171 384.891 155.759 384.407  c
155.348 383.922 154.554 383.331 153.376 382.633  c
151.673 381.618 l
h
f
0 J
1.45000 M
newpath
187.515 381.267 m
187.515 400.597 171.845 416.267 152.515 416.267  c
133.185 416.267 117.515 400.597 117.515 381.267  c
117.515 361.937 133.185 346.267 152.515 346.267  c
171.845 346.267 187.515 361.937 187.515 381.267  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-239.485 -212.948 m
-171.485 -212.948 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-274.485 -130.948 m
-274.485 -177.948 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-247.789 -118.582 m
-163.182 -190.315 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-136.485 -177.948 m
-136.485 -130.948 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-239.485 -95.9485 m
-171.485 -95.9485 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-247.789 -190.315 m
-163.182 -118.582 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-159.677 -69.7352 m
-184.293 -41.9118 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-252.054 -69.0813 m
-229.916 -42.5656 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-229.160 11.7826 m
-252.811 41.7695 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-187.115 12.7627 m
-167.055 40.7894 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-239.485 69.2506 m
-181.685 69.2506 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-172.485 -15.6985 m
-147.485 -15.6985 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
25.5149 -212.948 m
93.5149 -212.948 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-9.48510 -130.948 m
-9.48510 -177.948 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
17.2114 -118.582 m
101.818 -190.315 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
128.515 -177.948 m
128.515 -130.948 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
25.5149 -95.9485 m
93.5149 -95.9485 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
17.2114 -190.315 m
101.818 -118.582 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
105.323 -69.7352 m
80.7067 -41.9118 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
12.9460 -69.0813 m
35.0838 -42.5656 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
35.3456 11.3852 m
9.68416 42.7352 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
79.6842 11.3852 m
105.346 42.7352 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
22.5149 69.8188 m
92.5149 69.8188 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
92.5149 -15.6985 m
117.515 -15.6985 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-239.485 189.116 m
-171.485 189.116 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-274.485 271.116 m
-274.485 224.116 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-247.789 283.482 m
-163.182 211.750 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-136.485 224.116 m
-136.485 271.116 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-239.485 306.116 m
-171.485 306.116 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-247.789 211.750 m
-163.182 283.482 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-159.677 332.330 m
-184.293 360.153 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-252.054 332.984 m
-229.916 359.499 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
-229.704 413.410 m
-252.267 440.872 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-185.877 413.900 m
-165.093 440.382 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-239.485 467.916 m
-178.485 467.916 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-172.485 386.366 m
-147.485 386.366 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
25.5149 184.017 m
93.5149 184.017 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
-9.48510 266.017 m
-9.48510 219.017 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
17.2114 278.383 m
101.818 206.651 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
128.515 219.017 m
128.515 266.017 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
25.5149 301.017 m
93.5149 301.017 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
17.2114 206.651 m
101.818 278.383 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
105.323 327.230 m
80.7067 355.053 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
12.9460 327.884 m
35.0838 354.400 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
35.5204 408.492 m
9.50941 440.690 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
79.5094 408.492 m
105.520 440.690 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
22.5149 467.916 m
92.5149 467.916 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
92.5149 381.267 m
117.515 381.267 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
