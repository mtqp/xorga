%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 45 20 550 771
%%Creator: yExport 1.1.0.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, June 29, 2010 8:35:50 PM ART
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
571 850 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
571.000 0.00000 l
571.000 850.000 l
0.00000 850.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 571 850 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -26.0000 -5.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
26.0000 5.00000 m
597.000 5.00000 l
597.000 855.000 l
26.0000 855.000 l
26.0000 5.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -26.0000 -5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -26.0000 -5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -26.0000 -5.00000 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
76.8616 69.2102 m
76.8616 67.3977 l
80.4709 67.3977 l
80.4709 53.1477 l
76.8616 54.0540 l
76.8616 52.1946 l
82.8928 50.6946 l
82.8928 67.3977 l
86.5022 67.3977 l
86.5022 69.2102 l
76.8616 69.2102 l
h
f
0 J
1.45000 M
newpath
116.000 60.0000 m
116.000 79.3300 100.330 95.0000 81.0000 95.0000  c
61.6700 95.0000 46.0000 79.3300 46.0000 60.0000  c
46.0000 40.6700 61.6700 25.0000 81.0000 25.0000  c
100.330 25.0000 116.000 40.6700 116.000 60.0000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
198.674 69.2102 m
198.674 67.1008 l
199.372 65.4654 200.789 63.6842 202.924 61.7571  c
204.299 60.5227 l
206.070 58.9185 206.955 57.3248 206.955 55.7415  c
206.955 54.7310 206.653 53.9368 206.049 53.3586  c
205.445 52.7805 204.612 52.4915 203.549 52.4915  c
202.299 52.4915 200.825 52.9758 199.127 53.9446  c
199.127 51.8196 l
200.731 51.0696 202.320 50.6946 203.893 50.6946  c
205.591 50.6946 206.953 51.1503 207.979 52.0618  c
209.005 52.9732 209.518 54.1790 209.518 55.6790  c
209.518 56.7623 209.257 57.7232 208.737 58.5618  c
208.216 59.4003 207.252 60.4185 205.846 61.6165  c
204.924 62.4133 l
202.997 64.0487 201.882 65.6112 201.580 67.1008  c
209.424 67.1008 l
209.424 69.2102 l
198.674 69.2102 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
239.500 60.0000 m
239.500 79.3300 223.830 95.0000 204.500 95.0000  c
185.170 95.0000 169.500 79.3300 169.500 60.0000  c
169.500 40.6700 185.170 25.0000 204.500 25.0000  c
223.830 25.0000 239.500 40.6700 239.500 60.0000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
82.5022 155.210 m
82.5022 150.101 l
74.3772 150.101 l
74.3772 148.273 l
82.5022 137.148 l
84.7678 137.148 l
84.7678 148.132 l
87.1897 148.132 l
87.1897 150.101 l
84.7678 150.101 l
84.7678 155.210 l
82.5022 155.210 l
h
76.7366 148.132 m
82.6741 148.132 l
82.6741 140.101 l
76.7366 148.132 l
h
f
0 J
1.45000 M
newpath
116.000 146.000 m
116.000 165.330 100.330 181.000 81.0000 181.000  c
61.6700 181.000 46.0000 165.330 46.0000 146.000  c
46.0000 126.670 61.6700 111.000 81.0000 111.000  c
100.330 111.000 116.000 126.670 116.000 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
199.143 155.070 m
199.143 152.835 l
200.862 153.512 202.216 153.851 203.205 153.851  c
204.362 153.851 205.299 153.515 206.018 152.843  c
206.737 152.171 207.096 151.304 207.096 150.241  c
207.096 147.700 205.315 146.429 201.752 146.429  c
200.815 146.429 l
200.815 144.804 l
201.643 144.804 l
204.987 144.804 206.658 143.627 206.658 141.273  c
206.658 139.419 205.559 138.491 203.362 138.491  c
202.153 138.491 200.825 138.830 199.377 139.507  c
199.377 137.413 l
200.804 136.934 202.190 136.695 203.533 136.695  c
207.221 136.695 209.065 138.090 209.065 140.882  c
209.065 143.007 207.809 144.517 205.299 145.413  c
208.216 146.090 209.674 147.689 209.674 150.210  c
209.674 151.908 209.112 153.241 207.987 154.210  c
206.862 155.179 205.320 155.663 203.362 155.663  c
202.247 155.663 200.841 155.465 199.143 155.070  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
239.500 146.000 m
239.500 165.330 223.830 181.000 204.500 181.000  c
185.170 181.000 169.500 165.330 169.500 146.000  c
169.500 126.670 185.170 111.000 204.500 111.000  c
223.830 111.000 239.500 126.670 239.500 146.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
146.143 255.288 m
146.143 253.132 l
147.330 253.611 148.466 253.851 149.549 253.851  c
150.737 253.851 151.671 253.502 152.354 252.804  c
153.036 252.106 153.377 251.142 153.377 249.913  c
153.377 247.205 151.507 245.851 147.768 245.851  c
147.351 245.851 146.908 245.877 146.440 245.929  c
146.440 237.148 l
155.580 237.148 l
155.580 239.241 l
148.549 239.241 l
148.549 244.007 l
150.872 244.007 152.684 244.538 153.987 245.601  c
155.289 246.663 155.940 248.142 155.940 250.038  c
155.940 251.788 155.349 253.163 154.166 254.163  c
152.984 255.163 151.341 255.663 149.237 255.663  c
148.320 255.663 147.289 255.538 146.143 255.288  c
h
f
0 J
1.45000 M
newpath
186.000 246.000 m
186.000 265.330 170.330 281.000 151.000 281.000  c
131.670 281.000 116.000 265.330 116.000 246.000  c
116.000 226.670 131.670 211.000 151.000 211.000  c
170.330 211.000 186.000 226.670 186.000 246.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
249.393 245.851 m
250.539 244.361 251.981 243.616 253.721 243.616  c
255.304 243.616 256.599 244.140 257.604 245.187  c
258.609 246.234 259.112 247.575 259.112 249.210  c
259.112 251.085 258.546 252.629 257.416 253.843  c
256.286 255.057 254.856 255.663 253.127 255.663  c
251.138 255.663 249.580 254.861 248.455 253.257  c
247.330 251.653 246.768 249.429 246.768 246.585  c
246.768 243.450 247.414 241.015 248.705 239.281  c
249.997 237.546 251.815 236.679 254.158 236.679  c
255.231 236.679 256.575 236.908 258.190 237.366  c
258.190 239.460 l
256.481 238.814 255.086 238.491 254.002 238.491  c
250.929 238.491 249.393 240.945 249.393 245.851  c
h
256.690 249.741 m
256.690 248.377 256.382 247.304 255.768 246.523  c
255.153 245.741 254.304 245.351 253.221 245.351  c
252.200 245.351 251.323 245.692 250.588 246.374  c
249.854 247.057 249.487 247.877 249.487 248.835  c
249.487 250.346 249.836 251.559 250.533 252.476  c
251.231 253.392 252.153 253.851 253.299 253.851  c
254.330 253.851 255.153 253.478 255.768 252.734  c
256.382 251.989 256.690 250.991 256.690 249.741  c
h
f
0 J
1.45000 M
newpath
288.000 246.000 m
288.000 265.330 272.330 281.000 253.000 281.000  c
233.670 281.000 218.000 265.330 218.000 246.000  c
218.000 226.670 233.670 211.000 253.000 211.000  c
272.330 211.000 288.000 226.670 288.000 246.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
76.8616 337.210 m
76.8616 335.398 l
80.4709 335.398 l
80.4709 321.148 l
76.8616 322.054 l
76.8616 320.195 l
82.8928 318.695 l
82.8928 335.398 l
86.5022 335.398 l
86.5022 337.210 l
76.8616 337.210 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
116.000 328.000 m
116.000 347.330 100.330 363.000 81.0000 363.000  c
61.6700 363.000 46.0000 347.330 46.0000 328.000  c
46.0000 308.670 61.6700 293.000 81.0000 293.000  c
100.330 293.000 116.000 308.670 116.000 328.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
198.674 337.210 m
198.674 335.101 l
199.372 333.465 200.789 331.684 202.924 329.757  c
204.299 328.523 l
206.070 326.919 206.955 325.325 206.955 323.741  c
206.955 322.731 206.653 321.937 206.049 321.359  c
205.445 320.781 204.612 320.491 203.549 320.491  c
202.299 320.491 200.825 320.976 199.127 321.945  c
199.127 319.820 l
200.731 319.070 202.320 318.695 203.893 318.695  c
205.591 318.695 206.953 319.150 207.979 320.062  c
209.005 320.973 209.518 322.179 209.518 323.679  c
209.518 324.762 209.257 325.723 208.737 326.562  c
208.216 327.400 207.252 328.419 205.846 329.616  c
204.924 330.413 l
202.997 332.049 201.882 333.611 201.580 335.101  c
209.424 335.101 l
209.424 337.210 l
198.674 337.210 l
h
f
0 J
1.45000 M
newpath
239.500 328.000 m
239.500 347.330 223.830 363.000 204.500 363.000  c
185.170 363.000 169.500 347.330 169.500 328.000  c
169.500 308.670 185.170 293.000 204.500 293.000  c
223.830 293.000 239.500 308.670 239.500 328.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
82.5022 423.210 m
82.5022 418.101 l
74.3772 418.101 l
74.3772 416.273 l
82.5022 405.148 l
84.7678 405.148 l
84.7678 416.132 l
87.1897 416.132 l
87.1897 418.101 l
84.7678 418.101 l
84.7678 423.210 l
82.5022 423.210 l
h
76.7366 416.132 m
82.6741 416.132 l
82.6741 408.101 l
76.7366 416.132 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
116.000 414.000 m
116.000 433.330 100.330 449.000 81.0000 449.000  c
61.6700 449.000 46.0000 433.330 46.0000 414.000  c
46.0000 394.670 61.6700 379.000 81.0000 379.000  c
100.330 379.000 116.000 394.670 116.000 414.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
199.143 423.070 m
199.143 420.835 l
200.862 421.512 202.216 421.851 203.205 421.851  c
204.362 421.851 205.299 421.515 206.018 420.843  c
206.737 420.171 207.096 419.304 207.096 418.241  c
207.096 415.700 205.315 414.429 201.752 414.429  c
200.815 414.429 l
200.815 412.804 l
201.643 412.804 l
204.987 412.804 206.658 411.627 206.658 409.273  c
206.658 407.419 205.559 406.491 203.362 406.491  c
202.153 406.491 200.825 406.830 199.377 407.507  c
199.377 405.413 l
200.804 404.934 202.190 404.695 203.533 404.695  c
207.221 404.695 209.065 406.090 209.065 408.882  c
209.065 411.007 207.809 412.517 205.299 413.413  c
208.216 414.090 209.674 415.689 209.674 418.210  c
209.674 419.908 209.112 421.241 207.987 422.210  c
206.862 423.179 205.320 423.663 203.362 423.663  c
202.247 423.663 200.841 423.465 199.143 423.070  c
h
f
0 J
1.45000 M
newpath
239.500 414.000 m
239.500 433.330 223.830 449.000 204.500 449.000  c
185.170 449.000 169.500 433.330 169.500 414.000  c
169.500 394.670 185.170 379.000 204.500 379.000  c
223.830 379.000 239.500 394.670 239.500 414.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
146.143 523.288 m
146.143 521.132 l
147.330 521.611 148.466 521.851 149.549 521.851  c
150.737 521.851 151.671 521.502 152.354 520.804  c
153.036 520.106 153.377 519.142 153.377 517.913  c
153.377 515.205 151.507 513.851 147.768 513.851  c
147.351 513.851 146.908 513.877 146.440 513.929  c
146.440 505.148 l
155.580 505.148 l
155.580 507.241 l
148.549 507.241 l
148.549 512.007 l
150.872 512.007 152.684 512.538 153.987 513.601  c
155.289 514.663 155.940 516.142 155.940 518.038  c
155.940 519.788 155.349 521.163 154.166 522.163  c
152.984 523.163 151.341 523.663 149.237 523.663  c
148.320 523.663 147.289 523.538 146.143 523.288  c
h
f
0 J
1.45000 M
newpath
186.000 514.000 m
186.000 533.330 170.330 549.000 151.000 549.000  c
131.670 549.000 116.000 533.330 116.000 514.000  c
116.000 494.670 131.670 479.000 151.000 479.000  c
170.330 479.000 186.000 494.670 186.000 514.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
249.393 513.851 m
250.539 512.361 251.981 511.616 253.721 511.616  c
255.304 511.616 256.599 512.140 257.604 513.187  c
258.609 514.234 259.112 515.575 259.112 517.210  c
259.112 519.085 258.546 520.629 257.416 521.843  c
256.286 523.057 254.856 523.663 253.127 523.663  c
251.138 523.663 249.580 522.861 248.455 521.257  c
247.330 519.653 246.768 517.429 246.768 514.585  c
246.768 511.450 247.414 509.015 248.705 507.281  c
249.997 505.546 251.815 504.679 254.158 504.679  c
255.231 504.679 256.575 504.908 258.190 505.366  c
258.190 507.460 l
256.481 506.814 255.086 506.491 254.002 506.491  c
250.929 506.491 249.393 508.945 249.393 513.851  c
h
256.690 517.741 m
256.690 516.377 256.382 515.304 255.768 514.523  c
255.153 513.741 254.304 513.351 253.221 513.351  c
252.200 513.351 251.323 513.692 250.588 514.374  c
249.854 515.057 249.487 515.877 249.487 516.835  c
249.487 518.346 249.836 519.559 250.533 520.476  c
251.231 521.392 252.153 521.851 253.299 521.851  c
254.330 521.851 255.153 521.478 255.768 520.734  c
256.382 519.989 256.690 518.991 256.690 517.741  c
h
f
0 J
1.45000 M
newpath
288.000 514.000 m
288.000 533.330 272.330 549.000 253.000 549.000  c
233.670 549.000 218.000 533.330 218.000 514.000  c
218.000 494.670 233.670 479.000 253.000 479.000  c
272.330 479.000 288.000 494.670 288.000 514.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
340.862 69.2102 m
340.862 67.3977 l
344.471 67.3977 l
344.471 53.1477 l
340.862 54.0540 l
340.862 52.1946 l
346.893 50.6946 l
346.893 67.3977 l
350.502 67.3977 l
350.502 69.2102 l
340.862 69.2102 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
380.000 60.0000 m
380.000 79.3300 364.330 95.0000 345.000 95.0000  c
325.670 95.0000 310.000 79.3300 310.000 60.0000  c
310.000 40.6700 325.670 25.0000 345.000 25.0000  c
364.330 25.0000 380.000 40.6700 380.000 60.0000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
462.674 69.2102 m
462.674 67.1008 l
463.372 65.4654 464.789 63.6842 466.924 61.7571  c
468.299 60.5227 l
470.070 58.9185 470.955 57.3248 470.955 55.7415  c
470.955 54.7310 470.653 53.9368 470.049 53.3586  c
469.445 52.7805 468.612 52.4915 467.549 52.4915  c
466.299 52.4915 464.825 52.9758 463.127 53.9446  c
463.127 51.8196 l
464.731 51.0696 466.320 50.6946 467.893 50.6946  c
469.591 50.6946 470.953 51.1503 471.979 52.0618  c
473.005 52.9732 473.518 54.1790 473.518 55.6790  c
473.518 56.7623 473.257 57.7232 472.737 58.5618  c
472.216 59.4003 471.252 60.4185 469.846 61.6165  c
468.924 62.4133 l
466.997 64.0487 465.882 65.6112 465.580 67.1008  c
473.424 67.1008 l
473.424 69.2102 l
462.674 69.2102 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
503.500 60.0000 m
503.500 79.3300 487.830 95.0000 468.500 95.0000  c
449.170 95.0000 433.500 79.3300 433.500 60.0000  c
433.500 40.6700 449.170 25.0000 468.500 25.0000  c
487.830 25.0000 503.500 40.6700 503.500 60.0000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
346.502 155.210 m
346.502 150.101 l
338.377 150.101 l
338.377 148.273 l
346.502 137.148 l
348.768 137.148 l
348.768 148.132 l
351.190 148.132 l
351.190 150.101 l
348.768 150.101 l
348.768 155.210 l
346.502 155.210 l
h
340.737 148.132 m
346.674 148.132 l
346.674 140.101 l
340.737 148.132 l
h
f
0 J
1.45000 M
newpath
380.000 146.000 m
380.000 165.330 364.330 181.000 345.000 181.000  c
325.670 181.000 310.000 165.330 310.000 146.000  c
310.000 126.670 325.670 111.000 345.000 111.000  c
364.330 111.000 380.000 126.670 380.000 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
463.143 155.070 m
463.143 152.835 l
464.862 153.512 466.216 153.851 467.205 153.851  c
468.362 153.851 469.299 153.515 470.018 152.843  c
470.737 152.171 471.096 151.304 471.096 150.241  c
471.096 147.700 469.315 146.429 465.752 146.429  c
464.815 146.429 l
464.815 144.804 l
465.643 144.804 l
468.987 144.804 470.658 143.627 470.658 141.273  c
470.658 139.419 469.559 138.491 467.362 138.491  c
466.153 138.491 464.825 138.830 463.377 139.507  c
463.377 137.413 l
464.804 136.934 466.190 136.695 467.533 136.695  c
471.221 136.695 473.065 138.090 473.065 140.882  c
473.065 143.007 471.809 144.517 469.299 145.413  c
472.216 146.090 473.674 147.689 473.674 150.210  c
473.674 151.908 473.112 153.241 471.987 154.210  c
470.862 155.179 469.320 155.663 467.362 155.663  c
466.247 155.663 464.841 155.465 463.143 155.070  c
h
f
0 J
1.45000 M
newpath
503.500 146.000 m
503.500 165.330 487.830 181.000 468.500 181.000  c
449.170 181.000 433.500 165.330 433.500 146.000  c
433.500 126.670 449.170 111.000 468.500 111.000  c
487.830 111.000 503.500 126.670 503.500 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
410.143 255.288 m
410.143 253.132 l
411.330 253.611 412.466 253.851 413.549 253.851  c
414.737 253.851 415.671 253.502 416.354 252.804  c
417.036 252.106 417.377 251.142 417.377 249.913  c
417.377 247.205 415.507 245.851 411.768 245.851  c
411.351 245.851 410.908 245.877 410.440 245.929  c
410.440 237.148 l
419.580 237.148 l
419.580 239.241 l
412.549 239.241 l
412.549 244.007 l
414.872 244.007 416.684 244.538 417.987 245.601  c
419.289 246.663 419.940 248.142 419.940 250.038  c
419.940 251.788 419.349 253.163 418.166 254.163  c
416.984 255.163 415.341 255.663 413.237 255.663  c
412.320 255.663 411.289 255.538 410.143 255.288  c
h
f
0 J
1.45000 M
newpath
450.000 246.000 m
450.000 265.330 434.330 281.000 415.000 281.000  c
395.670 281.000 380.000 265.330 380.000 246.000  c
380.000 226.670 395.670 211.000 415.000 211.000  c
434.330 211.000 450.000 226.670 450.000 246.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
513.393 245.851 m
514.539 244.361 515.981 243.616 517.721 243.616  c
519.304 243.616 520.599 244.140 521.604 245.187  c
522.609 246.234 523.112 247.575 523.112 249.210  c
523.112 251.085 522.546 252.629 521.416 253.843  c
520.286 255.057 518.856 255.663 517.127 255.663  c
515.138 255.663 513.580 254.861 512.455 253.257  c
511.330 251.653 510.768 249.429 510.768 246.585  c
510.768 243.450 511.414 241.015 512.705 239.281  c
513.997 237.546 515.815 236.679 518.158 236.679  c
519.231 236.679 520.575 236.908 522.190 237.366  c
522.190 239.460 l
520.481 238.814 519.086 238.491 518.002 238.491  c
514.929 238.491 513.393 240.945 513.393 245.851  c
h
520.690 249.741 m
520.690 248.377 520.382 247.304 519.768 246.523  c
519.153 245.741 518.304 245.351 517.221 245.351  c
516.200 245.351 515.323 245.692 514.588 246.374  c
513.854 247.057 513.487 247.877 513.487 248.835  c
513.487 250.346 513.836 251.559 514.533 252.476  c
515.231 253.392 516.153 253.851 517.299 253.851  c
518.330 253.851 519.153 253.478 519.768 252.734  c
520.382 251.989 520.690 250.991 520.690 249.741  c
h
f
0 J
1.45000 M
newpath
552.000 246.000 m
552.000 265.330 536.330 281.000 517.000 281.000  c
497.670 281.000 482.000 265.330 482.000 246.000  c
482.000 226.670 497.670 211.000 517.000 211.000  c
536.330 211.000 552.000 226.670 552.000 246.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
538.393 513.851 m
539.539 512.361 540.981 511.616 542.721 511.616  c
544.304 511.616 545.599 512.140 546.604 513.187  c
547.609 514.234 548.112 515.575 548.112 517.210  c
548.112 519.085 547.546 520.629 546.416 521.843  c
545.286 523.057 543.856 523.663 542.127 523.663  c
540.138 523.663 538.580 522.861 537.455 521.257  c
536.330 519.653 535.768 517.429 535.768 514.585  c
535.768 511.450 536.414 509.015 537.705 507.281  c
538.997 505.546 540.815 504.679 543.158 504.679  c
544.231 504.679 545.575 504.908 547.190 505.366  c
547.190 507.460 l
545.481 506.814 544.086 506.491 543.002 506.491  c
539.929 506.491 538.393 508.945 538.393 513.851  c
h
545.690 517.741 m
545.690 516.377 545.382 515.304 544.768 514.523  c
544.153 513.741 543.304 513.351 542.221 513.351  c
541.200 513.351 540.323 513.692 539.588 514.374  c
538.854 515.057 538.487 515.877 538.487 516.835  c
538.487 518.346 538.836 519.559 539.533 520.476  c
540.231 521.392 541.153 521.851 542.299 521.851  c
543.330 521.851 544.153 521.478 544.768 520.734  c
545.382 519.989 545.690 518.991 545.690 517.741  c
h
f
0 J
1.45000 M
newpath
577.000 514.000 m
577.000 533.330 561.330 549.000 542.000 549.000  c
522.670 549.000 507.000 533.330 507.000 514.000  c
507.000 494.670 522.670 479.000 542.000 479.000  c
561.330 479.000 577.000 494.670 577.000 514.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
435.143 523.288 m
435.143 521.132 l
436.330 521.611 437.466 521.851 438.549 521.851  c
439.737 521.851 440.671 521.502 441.354 520.804  c
442.036 520.106 442.377 519.142 442.377 517.913  c
442.377 515.205 440.507 513.851 436.768 513.851  c
436.351 513.851 435.908 513.877 435.440 513.929  c
435.440 505.148 l
444.580 505.148 l
444.580 507.241 l
437.549 507.241 l
437.549 512.007 l
439.872 512.007 441.684 512.538 442.987 513.601  c
444.289 514.663 444.940 516.142 444.940 518.038  c
444.940 519.788 444.349 521.163 443.166 522.163  c
441.984 523.163 440.341 523.663 438.237 523.663  c
437.320 523.663 436.289 523.538 435.143 523.288  c
h
f
0 J
1.45000 M
newpath
475.000 514.000 m
475.000 533.330 459.330 549.000 440.000 549.000  c
420.670 549.000 405.000 533.330 405.000 514.000  c
405.000 494.670 420.670 479.000 440.000 479.000  c
459.330 479.000 475.000 494.670 475.000 514.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
488.143 423.070 m
488.143 420.835 l
489.862 421.512 491.216 421.851 492.205 421.851  c
493.362 421.851 494.299 421.515 495.018 420.843  c
495.737 420.171 496.096 419.304 496.096 418.241  c
496.096 415.700 494.315 414.429 490.752 414.429  c
489.815 414.429 l
489.815 412.804 l
490.643 412.804 l
493.987 412.804 495.658 411.627 495.658 409.273  c
495.658 407.419 494.559 406.491 492.362 406.491  c
491.153 406.491 489.825 406.830 488.377 407.507  c
488.377 405.413 l
489.804 404.934 491.190 404.695 492.533 404.695  c
496.221 404.695 498.065 406.090 498.065 408.882  c
498.065 411.007 496.809 412.517 494.299 413.413  c
497.216 414.090 498.674 415.689 498.674 418.210  c
498.674 419.908 498.112 421.241 496.987 422.210  c
495.862 423.179 494.320 423.663 492.362 423.663  c
491.247 423.663 489.841 423.465 488.143 423.070  c
h
f
0 J
1.45000 M
newpath
528.500 414.000 m
528.500 433.330 512.830 449.000 493.500 449.000  c
474.170 449.000 458.500 433.330 458.500 414.000  c
458.500 394.670 474.170 379.000 493.500 379.000  c
512.830 379.000 528.500 394.670 528.500 414.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
371.502 423.210 m
371.502 418.101 l
363.377 418.101 l
363.377 416.273 l
371.502 405.148 l
373.768 405.148 l
373.768 416.132 l
376.190 416.132 l
376.190 418.101 l
373.768 418.101 l
373.768 423.210 l
371.502 423.210 l
h
365.737 416.132 m
371.674 416.132 l
371.674 408.101 l
365.737 416.132 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
405.000 414.000 m
405.000 433.330 389.330 449.000 370.000 449.000  c
350.670 449.000 335.000 433.330 335.000 414.000  c
335.000 394.670 350.670 379.000 370.000 379.000  c
389.330 379.000 405.000 394.670 405.000 414.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
487.674 337.210 m
487.674 335.101 l
488.372 333.465 489.789 331.684 491.924 329.757  c
493.299 328.523 l
495.070 326.919 495.955 325.325 495.955 323.741  c
495.955 322.731 495.653 321.937 495.049 321.359  c
494.445 320.781 493.612 320.491 492.549 320.491  c
491.299 320.491 489.825 320.976 488.127 321.945  c
488.127 319.820 l
489.731 319.070 491.320 318.695 492.893 318.695  c
494.591 318.695 495.953 319.150 496.979 320.062  c
498.005 320.973 498.518 322.179 498.518 323.679  c
498.518 324.762 498.257 325.723 497.737 326.562  c
497.216 327.400 496.252 328.419 494.846 329.616  c
493.924 330.413 l
491.997 332.049 490.882 333.611 490.580 335.101  c
498.424 335.101 l
498.424 337.210 l
487.674 337.210 l
h
f
0 J
1.45000 M
newpath
528.500 328.000 m
528.500 347.330 512.830 363.000 493.500 363.000  c
474.170 363.000 458.500 347.330 458.500 328.000  c
458.500 308.670 474.170 293.000 493.500 293.000  c
512.830 293.000 528.500 308.670 528.500 328.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
365.862 337.210 m
365.862 335.398 l
369.471 335.398 l
369.471 321.148 l
365.862 322.054 l
365.862 320.195 l
371.893 318.695 l
371.893 335.398 l
375.502 335.398 l
375.502 337.210 l
365.862 337.210 l
h
f
0 J
1.45000 M
newpath
405.000 328.000 m
405.000 347.330 389.330 363.000 370.000 363.000  c
350.670 363.000 335.000 347.330 335.000 328.000  c
335.000 308.670 350.670 293.000 370.000 293.000  c
389.330 293.000 405.000 308.670 405.000 328.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
76.8616 623.210 m
76.8616 621.398 l
80.4709 621.398 l
80.4709 607.148 l
76.8616 608.054 l
76.8616 606.195 l
82.8928 604.695 l
82.8928 621.398 l
86.5022 621.398 l
86.5022 623.210 l
76.8616 623.210 l
h
f
0 J
1.45000 M
newpath
116.000 614.000 m
116.000 633.330 100.330 649.000 81.0000 649.000  c
61.6700 649.000 46.0000 633.330 46.0000 614.000  c
46.0000 594.670 61.6700 579.000 81.0000 579.000  c
100.330 579.000 116.000 594.670 116.000 614.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
198.674 623.210 m
198.674 621.101 l
199.372 619.465 200.789 617.684 202.924 615.757  c
204.299 614.523 l
206.070 612.919 206.955 611.325 206.955 609.741  c
206.955 608.731 206.653 607.937 206.049 607.359  c
205.445 606.781 204.612 606.491 203.549 606.491  c
202.299 606.491 200.825 606.976 199.127 607.945  c
199.127 605.820 l
200.731 605.070 202.320 604.695 203.893 604.695  c
205.591 604.695 206.953 605.150 207.979 606.062  c
209.005 606.973 209.518 608.179 209.518 609.679  c
209.518 610.762 209.257 611.723 208.737 612.562  c
208.216 613.400 207.252 614.419 205.846 615.616  c
204.924 616.413 l
202.997 618.049 201.882 619.611 201.580 621.101  c
209.424 621.101 l
209.424 623.210 l
198.674 623.210 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
239.500 614.000 m
239.500 633.330 223.830 649.000 204.500 649.000  c
185.170 649.000 169.500 633.330 169.500 614.000  c
169.500 594.670 185.170 579.000 204.500 579.000  c
223.830 579.000 239.500 594.670 239.500 614.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
82.5022 709.210 m
82.5022 704.101 l
74.3772 704.101 l
74.3772 702.273 l
82.5022 691.148 l
84.7678 691.148 l
84.7678 702.132 l
87.1897 702.132 l
87.1897 704.101 l
84.7678 704.101 l
84.7678 709.210 l
82.5022 709.210 l
h
76.7366 702.132 m
82.6741 702.132 l
82.6741 694.101 l
76.7366 702.132 l
h
f
0 J
1.45000 M
newpath
116.000 700.000 m
116.000 719.330 100.330 735.000 81.0000 735.000  c
61.6700 735.000 46.0000 719.330 46.0000 700.000  c
46.0000 680.670 61.6700 665.000 81.0000 665.000  c
100.330 665.000 116.000 680.670 116.000 700.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
199.143 709.070 m
199.143 706.835 l
200.862 707.512 202.216 707.851 203.205 707.851  c
204.362 707.851 205.299 707.515 206.018 706.843  c
206.737 706.171 207.096 705.304 207.096 704.241  c
207.096 701.700 205.315 700.429 201.752 700.429  c
200.815 700.429 l
200.815 698.804 l
201.643 698.804 l
204.987 698.804 206.658 697.627 206.658 695.273  c
206.658 693.419 205.559 692.491 203.362 692.491  c
202.153 692.491 200.825 692.830 199.377 693.507  c
199.377 691.413 l
200.804 690.934 202.190 690.695 203.533 690.695  c
207.221 690.695 209.065 692.090 209.065 694.882  c
209.065 697.007 207.809 698.517 205.299 699.413  c
208.216 700.090 209.674 701.689 209.674 704.210  c
209.674 705.908 209.112 707.241 207.987 708.210  c
206.862 709.179 205.320 709.663 203.362 709.663  c
202.247 709.663 200.841 709.465 199.143 709.070  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
239.500 700.000 m
239.500 719.330 223.830 735.000 204.500 735.000  c
185.170 735.000 169.500 719.330 169.500 700.000  c
169.500 680.670 185.170 665.000 204.500 665.000  c
223.830 665.000 239.500 680.670 239.500 700.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
146.143 809.288 m
146.143 807.132 l
147.330 807.611 148.466 807.851 149.549 807.851  c
150.737 807.851 151.671 807.502 152.354 806.804  c
153.036 806.106 153.377 805.142 153.377 803.913  c
153.377 801.205 151.507 799.851 147.768 799.851  c
147.351 799.851 146.908 799.877 146.440 799.929  c
146.440 791.148 l
155.580 791.148 l
155.580 793.241 l
148.549 793.241 l
148.549 798.007 l
150.872 798.007 152.684 798.538 153.987 799.601  c
155.289 800.663 155.940 802.142 155.940 804.038  c
155.940 805.788 155.349 807.163 154.166 808.163  c
152.984 809.163 151.341 809.663 149.237 809.663  c
148.320 809.663 147.289 809.538 146.143 809.288  c
h
f
0 J
1.45000 M
newpath
186.000 800.000 m
186.000 819.330 170.330 835.000 151.000 835.000  c
131.670 835.000 116.000 819.330 116.000 800.000  c
116.000 780.670 131.670 765.000 151.000 765.000  c
170.330 765.000 186.000 780.670 186.000 800.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
249.393 799.851 m
250.539 798.361 251.981 797.616 253.721 797.616  c
255.304 797.616 256.599 798.140 257.604 799.187  c
258.609 800.234 259.112 801.575 259.112 803.210  c
259.112 805.085 258.546 806.629 257.416 807.843  c
256.286 809.057 254.856 809.663 253.127 809.663  c
251.138 809.663 249.580 808.861 248.455 807.257  c
247.330 805.653 246.768 803.429 246.768 800.585  c
246.768 797.450 247.414 795.015 248.705 793.281  c
249.997 791.546 251.815 790.679 254.158 790.679  c
255.231 790.679 256.575 790.908 258.190 791.366  c
258.190 793.460 l
256.481 792.814 255.086 792.491 254.002 792.491  c
250.929 792.491 249.393 794.945 249.393 799.851  c
h
256.690 803.741 m
256.690 802.377 256.382 801.304 255.768 800.523  c
255.153 799.741 254.304 799.351 253.221 799.351  c
252.200 799.351 251.323 799.692 250.588 800.374  c
249.854 801.057 249.487 801.877 249.487 802.835  c
249.487 804.346 249.836 805.559 250.533 806.476  c
251.231 807.392 252.153 807.851 253.299 807.851  c
254.330 807.851 255.153 807.478 255.768 806.734  c
256.382 805.989 256.690 804.991 256.690 803.741  c
h
f
0 J
1.45000 M
newpath
288.000 800.000 m
288.000 819.330 272.330 835.000 253.000 835.000  c
233.670 835.000 218.000 819.330 218.000 800.000  c
218.000 780.670 233.670 765.000 253.000 765.000  c
272.330 765.000 288.000 780.670 288.000 800.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
116.000 60.0000 m
169.500 60.0000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
81.0000 95.0000 m
81.0000 111.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
116.000 146.000 m
169.500 146.000 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
204.500 95.0000 m
204.500 111.000 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
187.989 176.861 m
167.511 215.139 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
219.773 177.492 m
237.727 214.508 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
218.000 246.000 m
186.000 246.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
116.000 328.000 m
169.500 328.000 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
81.0000 363.000 m
81.0000 379.000 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
116.000 414.000 m
169.500 414.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
204.500 363.000 m
204.500 379.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
187.989 444.861 m
167.511 483.139 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
219.773 445.492 m
237.727 482.508 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
218.000 514.000 m
186.000 514.000 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
380.000 60.0000 m
433.500 60.0000 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
345.000 95.0000 m
345.000 111.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
380.000 146.000 m
433.500 146.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
468.500 95.0000 m
468.500 111.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
451.989 176.861 m
431.511 215.139 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
483.773 177.492 m
501.727 214.508 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
482.000 246.000 m
450.000 246.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
507.000 514.000 m
475.000 514.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
476.989 444.861 m
456.511 483.139 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
508.773 445.492 m
526.727 482.508 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
405.000 414.000 m
458.500 414.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
493.500 363.000 m
493.500 379.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
370.000 363.000 m
370.000 379.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
405.000 328.000 m
458.500 328.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
116.000 614.000 m
169.500 614.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
81.0000 649.000 m
81.0000 665.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
116.000 700.000 m
169.500 700.000 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
204.500 649.000 m
204.500 665.000 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
187.989 730.861 m
167.511 769.139 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
219.773 731.492 m
237.727 768.508 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
218.000 800.000 m
186.000 800.000 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
