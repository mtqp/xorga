%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 42 20 553 771
%%Creator: yExport 1.1.0.2
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, June 29, 2010 6:46:43 PM ART
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
535 787 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
535.000 0.00000 l
535.000 787.000 l
0.00000 787.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 535 787 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 22.0000 107.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
-22.0000 -107.000 m
513.000 -107.000 l
513.000 680.000 l
-22.0000 680.000 l
-22.0000 -107.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 22.0000 107.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 22.0000 107.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 22.0000 107.000 ] defaultmatrix matrix concatmatrix setmatrix
1.60000 M
10.0000 M
newpath
29.3616 -42.0398 m
29.3616 -43.8523 l
32.9709 -43.8523 l
32.9709 -58.1023 l
29.3616 -57.1960 l
29.3616 -59.0554 l
35.3928 -60.5554 l
35.3928 -43.8523 l
39.0022 -43.8523 l
39.0022 -42.0398 l
29.3616 -42.0398 l
h
f
0 J
1.45000 M
newpath
68.5000 -51.2500 m
68.5000 -31.9200 52.8300 -16.2500 33.5000 -16.2500  c
14.1700 -16.2500 -1.50000 -31.9200 -1.50000 -51.2500  c
-1.50000 -70.5800 14.1700 -86.2500 33.5000 -86.2500  c
52.8300 -86.2500 68.5000 -70.5800 68.5000 -51.2500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
165.674 -42.0398 m
165.674 -44.1492 l
166.372 -45.7846 167.789 -47.5658 169.924 -49.4929  c
171.299 -50.7273 l
173.070 -52.3315 173.955 -53.9252 173.955 -55.5085  c
173.955 -56.5190 173.653 -57.3132 173.049 -57.8914  c
172.445 -58.4695 171.612 -58.7585 170.549 -58.7585  c
169.299 -58.7585 167.825 -58.2742 166.127 -57.3054  c
166.127 -59.4304 l
167.731 -60.1804 169.320 -60.5554 170.893 -60.5554  c
172.591 -60.5554 173.953 -60.0997 174.979 -59.1882  c
176.005 -58.2768 176.518 -57.0710 176.518 -55.5710  c
176.518 -54.4877 176.257 -53.5268 175.737 -52.6882  c
175.216 -51.8497 174.252 -50.8315 172.846 -49.6335  c
171.924 -48.8367 l
169.997 -47.2013 168.882 -45.6388 168.580 -44.1492  c
176.424 -44.1492 l
176.424 -42.0398 l
165.674 -42.0398 l
h
f
0 J
1.45000 M
newpath
206.500 -51.2500 m
206.500 -31.9200 190.830 -16.2500 171.500 -16.2500  c
152.170 -16.2500 136.500 -31.9200 136.500 -51.2500  c
136.500 -70.5800 152.170 -86.2500 171.500 -86.2500  c
190.830 -86.2500 206.500 -70.5800 206.500 -51.2500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
35.0022 74.9602 m
35.0022 69.8508 l
26.8772 69.8508 l
26.8772 68.0227 l
35.0022 56.8977 l
37.2678 56.8977 l
37.2678 67.8821 l
39.6897 67.8821 l
39.6897 69.8508 l
37.2678 69.8508 l
37.2678 74.9602 l
35.0022 74.9602 l
h
29.2366 67.8821 m
35.1741 67.8821 l
35.1741 59.8508 l
29.2366 67.8821 l
h
f
0 J
1.45000 M
newpath
68.5000 65.7500 m
68.5000 85.0800 52.8300 100.750 33.5000 100.750  c
14.1700 100.750 -1.50000 85.0800 -1.50000 65.7500  c
-1.50000 46.4200 14.1700 30.7500 33.5000 30.7500  c
52.8300 30.7500 68.5000 46.4200 68.5000 65.7500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
166.143 74.8196 m
166.143 72.5852 l
167.862 73.2623 169.216 73.6008 170.205 73.6008  c
171.362 73.6008 172.299 73.2649 173.018 72.5930  c
173.737 71.9211 174.096 71.0540 174.096 69.9915  c
174.096 67.4498 172.315 66.1790 168.752 66.1790  c
167.815 66.1790 l
167.815 64.5540 l
168.643 64.5540 l
171.987 64.5540 173.658 63.3769 173.658 61.0227  c
173.658 59.1685 172.559 58.2415 170.362 58.2415  c
169.153 58.2415 167.825 58.5800 166.377 59.2571  c
166.377 57.1633 l
167.804 56.6842 169.190 56.4446 170.533 56.4446  c
174.221 56.4446 176.065 57.8404 176.065 60.6321  c
176.065 62.7571 174.809 64.2675 172.299 65.1633  c
175.216 65.8404 176.674 67.4394 176.674 69.9602  c
176.674 71.6581 176.112 72.9915 174.987 73.9602  c
173.862 74.9290 172.320 75.4133 170.362 75.4133  c
169.247 75.4133 167.841 75.2154 166.143 74.8196  c
h
f
0 J
1.45000 M
newpath
206.500 65.7500 m
206.500 85.0800 190.830 100.750 171.500 100.750  c
152.170 100.750 136.500 85.0800 136.500 65.7500  c
136.500 46.4200 152.170 30.7500 171.500 30.7500  c
190.830 30.7500 206.500 46.4200 206.500 65.7500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
95.6428 155.288 m
95.6428 153.132 l
96.8303 153.611 97.9657 153.851 99.0491 153.851  c
100.237 153.851 101.171 153.502 101.854 152.804  c
102.536 152.106 102.877 151.142 102.877 149.913  c
102.877 147.205 101.007 145.851 97.2678 145.851  c
96.8512 145.851 96.4084 145.877 95.9397 145.929  c
95.9397 137.148 l
105.080 137.148 l
105.080 139.241 l
98.0491 139.241 l
98.0491 144.007 l
100.372 144.007 102.184 144.538 103.487 145.601  c
104.789 146.663 105.440 148.142 105.440 150.038  c
105.440 151.788 104.849 153.163 103.666 154.163  c
102.484 155.163 100.841 155.663 98.7366 155.663  c
97.8199 155.663 96.7887 155.538 95.6428 155.288  c
h
f
0 J
1.45000 M
newpath
135.500 146.000 m
135.500 165.330 119.830 181.000 100.500 181.000  c
81.1700 181.000 65.5000 165.330 65.5000 146.000  c
65.5000 126.670 81.1700 111.000 100.500 111.000  c
119.830 111.000 135.500 126.670 135.500 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
29.8928 229.476 m
31.0387 227.986 32.4814 227.241 34.2209 227.241  c
35.8043 227.241 37.0986 227.765 38.1038 228.812  c
39.1090 229.859 39.6116 231.200 39.6116 232.835  c
39.6116 234.710 39.0465 236.254 37.9163 237.468  c
36.7861 238.682 35.3564 239.288 33.6272 239.288  c
31.6376 239.288 30.0803 238.486 28.9553 236.882  c
27.8303 235.278 27.2678 233.054 27.2678 230.210  c
27.2678 227.075 27.9137 224.640 29.2053 222.906  c
30.4970 221.171 32.3147 220.304 34.6584 220.304  c
35.7314 220.304 37.0751 220.533 38.6897 220.991  c
38.6897 223.085 l
36.9814 222.439 35.5855 222.116 34.5022 222.116  c
31.4293 222.116 29.8928 224.570 29.8928 229.476  c
h
37.1897 233.366 m
37.1897 232.002 36.8824 230.929 36.2678 230.148  c
35.6532 229.366 34.8043 228.976 33.7209 228.976  c
32.7001 228.976 31.8225 229.317 31.0881 229.999  c
30.3538 230.682 29.9866 231.502 29.9866 232.460  c
29.9866 233.971 30.3355 235.184 31.0334 236.101  c
31.7314 237.017 32.6532 237.476 33.7991 237.476  c
34.8303 237.476 35.6532 237.103 36.2678 236.359  c
36.8824 235.614 37.1897 234.616 37.1897 233.366  c
h
f
0 J
1.45000 M
newpath
68.5000 229.625 m
68.5000 248.955 52.8300 264.625 33.5000 264.625  c
14.1700 264.625 -1.50000 248.955 -1.50000 229.625  c
-1.50000 210.295 14.1700 194.625 33.5000 194.625  c
52.8300 194.625 68.5000 210.295 68.5000 229.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
150.362 238.835 m
150.591 237.429 150.924 236.213 151.362 235.187  c
151.799 234.161 152.570 232.752 153.674 230.960  c
158.612 223.023 l
149.299 223.023 l
149.299 220.773 l
160.908 220.773 l
160.908 223.023 l
156.273 229.856 153.679 235.127 153.127 238.835  c
150.362 238.835 l
h
f
0 J
1.45000 M
newpath
189.500 229.625 m
189.500 248.955 173.830 264.625 154.500 264.625  c
135.170 264.625 119.500 248.955 119.500 229.625  c
119.500 210.295 135.170 194.625 154.500 194.625  c
173.830 194.625 189.500 210.295 189.500 229.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
193.346 145.366 m
191.575 144.137 190.690 142.778 190.690 141.288  c
190.690 139.924 191.192 138.814 192.198 137.960  c
193.203 137.106 194.507 136.679 196.112 136.679  c
197.601 136.679 198.809 137.041 199.737 137.765  c
200.664 138.489 201.127 139.429 201.127 140.585  c
201.127 142.335 200.002 143.929 197.752 145.366  c
200.481 146.700 201.846 148.424 201.846 150.538  c
201.846 152.049 201.273 153.281 200.127 154.234  c
198.981 155.187 197.507 155.663 195.705 155.663  c
193.924 155.663 192.487 155.213 191.393 154.312  c
190.299 153.411 189.752 152.231 189.752 150.773  c
189.752 148.606 190.950 146.804 193.346 145.366  c
h
196.408 144.616 m
198.096 143.512 198.940 142.278 198.940 140.913  c
198.940 140.195 198.658 139.611 198.096 139.163  c
197.533 138.715 196.794 138.491 195.877 138.491  c
194.992 138.491 194.270 138.710 193.713 139.148  c
193.156 139.585 192.877 140.148 192.877 140.835  c
192.877 141.512 193.127 142.119 193.627 142.656  c
194.127 143.192 195.054 143.846 196.408 144.616  c
h
194.658 146.351 m
193.690 147.101 193.031 147.754 192.682 148.312  c
192.333 148.869 192.158 149.559 192.158 150.382  c
192.158 151.424 192.492 152.262 193.158 152.898  c
193.825 153.533 194.705 153.851 195.799 153.851  c
196.851 153.851 197.708 153.580 198.369 153.038  c
199.031 152.497 199.362 151.788 199.362 150.913  c
199.362 150.215 199.156 149.624 198.744 149.140  c
198.333 148.656 197.539 148.064 196.362 147.366  c
194.658 146.351 l
h
f
0 J
1.45000 M
newpath
230.500 146.000 m
230.500 165.330 214.830 181.000 195.500 181.000  c
176.170 181.000 160.500 165.330 160.500 146.000  c
160.500 126.670 176.170 111.000 195.500 111.000  c
214.830 111.000 230.500 126.670 230.500 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
291.362 -42.0398 m
291.362 -43.8523 l
294.971 -43.8523 l
294.971 -58.1023 l
291.362 -57.1960 l
291.362 -59.0554 l
297.393 -60.5554 l
297.393 -43.8523 l
301.002 -43.8523 l
301.002 -42.0398 l
291.362 -42.0398 l
h
f
0 J
1.45000 M
newpath
330.500 -51.2500 m
330.500 -31.9200 314.830 -16.2500 295.500 -16.2500  c
276.170 -16.2500 260.500 -31.9200 260.500 -51.2500  c
260.500 -70.5800 276.170 -86.2500 295.500 -86.2500  c
314.830 -86.2500 330.500 -70.5800 330.500 -51.2500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
427.674 -42.0398 m
427.674 -44.1492 l
428.372 -45.7846 429.789 -47.5658 431.924 -49.4929  c
433.299 -50.7273 l
435.070 -52.3315 435.955 -53.9252 435.955 -55.5085  c
435.955 -56.5190 435.653 -57.3132 435.049 -57.8914  c
434.445 -58.4695 433.612 -58.7585 432.549 -58.7585  c
431.299 -58.7585 429.825 -58.2742 428.127 -57.3054  c
428.127 -59.4304 l
429.731 -60.1804 431.320 -60.5554 432.893 -60.5554  c
434.591 -60.5554 435.953 -60.0997 436.979 -59.1882  c
438.005 -58.2768 438.518 -57.0710 438.518 -55.5710  c
438.518 -54.4877 438.257 -53.5268 437.737 -52.6882  c
437.216 -51.8497 436.252 -50.8315 434.846 -49.6335  c
433.924 -48.8367 l
431.997 -47.2013 430.882 -45.6388 430.580 -44.1492  c
438.424 -44.1492 l
438.424 -42.0398 l
427.674 -42.0398 l
h
f
0 J
1.45000 M
newpath
468.500 -51.2500 m
468.500 -31.9200 452.830 -16.2500 433.500 -16.2500  c
414.170 -16.2500 398.500 -31.9200 398.500 -51.2500  c
398.500 -70.5800 414.170 -86.2500 433.500 -86.2500  c
452.830 -86.2500 468.500 -70.5800 468.500 -51.2500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
297.002 74.9602 m
297.002 69.8508 l
288.877 69.8508 l
288.877 68.0227 l
297.002 56.8977 l
299.268 56.8977 l
299.268 67.8821 l
301.690 67.8821 l
301.690 69.8508 l
299.268 69.8508 l
299.268 74.9602 l
297.002 74.9602 l
h
291.237 67.8821 m
297.174 67.8821 l
297.174 59.8508 l
291.237 67.8821 l
h
f
0 J
1.45000 M
newpath
330.500 65.7500 m
330.500 85.0800 314.830 100.750 295.500 100.750  c
276.170 100.750 260.500 85.0800 260.500 65.7500  c
260.500 46.4200 276.170 30.7500 295.500 30.7500  c
314.830 30.7500 330.500 46.4200 330.500 65.7500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
428.143 74.8196 m
428.143 72.5852 l
429.862 73.2623 431.216 73.6008 432.205 73.6008  c
433.362 73.6008 434.299 73.2649 435.018 72.5930  c
435.737 71.9211 436.096 71.0540 436.096 69.9915  c
436.096 67.4498 434.315 66.1790 430.752 66.1790  c
429.815 66.1790 l
429.815 64.5540 l
430.643 64.5540 l
433.987 64.5540 435.658 63.3769 435.658 61.0227  c
435.658 59.1685 434.559 58.2415 432.362 58.2415  c
431.153 58.2415 429.825 58.5800 428.377 59.2571  c
428.377 57.1633 l
429.804 56.6842 431.190 56.4446 432.533 56.4446  c
436.221 56.4446 438.065 57.8404 438.065 60.6321  c
438.065 62.7571 436.809 64.2675 434.299 65.1633  c
437.216 65.8404 438.674 67.4394 438.674 69.9602  c
438.674 71.6581 438.112 72.9915 436.987 73.9602  c
435.862 74.9290 434.320 75.4133 432.362 75.4133  c
431.247 75.4133 429.841 75.2154 428.143 74.8196  c
h
f
0 J
1.45000 M
newpath
468.500 65.7500 m
468.500 85.0800 452.830 100.750 433.500 100.750  c
414.170 100.750 398.500 85.0800 398.500 65.7500  c
398.500 46.4200 414.170 30.7500 433.500 30.7500  c
452.830 30.7500 468.500 46.4200 468.500 65.7500  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
357.643 155.288 m
357.643 153.132 l
358.830 153.611 359.966 153.851 361.049 153.851  c
362.237 153.851 363.171 153.502 363.854 152.804  c
364.536 152.106 364.877 151.142 364.877 149.913  c
364.877 147.205 363.007 145.851 359.268 145.851  c
358.851 145.851 358.408 145.877 357.940 145.929  c
357.940 137.148 l
367.080 137.148 l
367.080 139.241 l
360.049 139.241 l
360.049 144.007 l
362.372 144.007 364.184 144.538 365.487 145.601  c
366.789 146.663 367.440 148.142 367.440 150.038  c
367.440 151.788 366.849 153.163 365.666 154.163  c
364.484 155.163 362.841 155.663 360.737 155.663  c
359.820 155.663 358.789 155.538 357.643 155.288  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
397.500 146.000 m
397.500 165.330 381.830 181.000 362.500 181.000  c
343.170 181.000 327.500 165.330 327.500 146.000  c
327.500 126.670 343.170 111.000 362.500 111.000  c
381.830 111.000 397.500 126.670 397.500 146.000  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
291.893 229.476 m
293.039 227.986 294.481 227.241 296.221 227.241  c
297.804 227.241 299.099 227.765 300.104 228.812  c
301.109 229.859 301.612 231.200 301.612 232.835  c
301.612 234.710 301.046 236.254 299.916 237.468  c
298.786 238.682 297.356 239.288 295.627 239.288  c
293.638 239.288 292.080 238.486 290.955 236.882  c
289.830 235.278 289.268 233.054 289.268 230.210  c
289.268 227.075 289.914 224.640 291.205 222.906  c
292.497 221.171 294.315 220.304 296.658 220.304  c
297.731 220.304 299.075 220.533 300.690 220.991  c
300.690 223.085 l
298.981 222.439 297.586 222.116 296.502 222.116  c
293.429 222.116 291.893 224.570 291.893 229.476  c
h
299.190 233.366 m
299.190 232.002 298.882 230.929 298.268 230.148  c
297.653 229.366 296.804 228.976 295.721 228.976  c
294.700 228.976 293.823 229.317 293.088 229.999  c
292.354 230.682 291.987 231.502 291.987 232.460  c
291.987 233.971 292.336 235.184 293.033 236.101  c
293.731 237.017 294.653 237.476 295.799 237.476  c
296.830 237.476 297.653 237.103 298.268 236.359  c
298.882 235.614 299.190 234.616 299.190 233.366  c
h
f
0 J
1.45000 M
newpath
330.500 229.625 m
330.500 248.955 314.830 264.625 295.500 264.625  c
276.170 264.625 260.500 248.955 260.500 229.625  c
260.500 210.295 276.170 194.625 295.500 194.625  c
314.830 194.625 330.500 210.295 330.500 229.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
428.362 238.835 m
428.591 237.429 428.924 236.213 429.362 235.187  c
429.799 234.161 430.570 232.752 431.674 230.960  c
436.612 223.023 l
427.299 223.023 l
427.299 220.773 l
438.908 220.773 l
438.908 223.023 l
434.273 229.856 431.679 235.127 431.127 238.835  c
428.362 238.835 l
h
f
0 J
1.45000 M
newpath
467.500 229.625 m
467.500 248.955 451.830 264.625 432.500 264.625  c
413.170 264.625 397.500 248.955 397.500 229.625  c
397.500 210.295 413.170 194.625 432.500 194.625  c
451.830 194.625 467.500 210.295 467.500 229.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
455.346 145.366 m
453.575 144.137 452.690 142.778 452.690 141.288  c
452.690 139.924 453.192 138.814 454.198 137.960  c
455.203 137.106 456.507 136.679 458.112 136.679  c
459.601 136.679 460.809 137.041 461.737 137.765  c
462.664 138.489 463.127 139.429 463.127 140.585  c
463.127 142.335 462.002 143.929 459.752 145.366  c
462.481 146.700 463.846 148.424 463.846 150.538  c
463.846 152.049 463.273 153.281 462.127 154.234  c
460.981 155.187 459.507 155.663 457.705 155.663  c
455.924 155.663 454.487 155.213 453.393 154.312  c
452.299 153.411 451.752 152.231 451.752 150.773  c
451.752 148.606 452.950 146.804 455.346 145.366  c
h
458.408 144.616 m
460.096 143.512 460.940 142.278 460.940 140.913  c
460.940 140.195 460.658 139.611 460.096 139.163  c
459.533 138.715 458.794 138.491 457.877 138.491  c
456.992 138.491 456.270 138.710 455.713 139.148  c
455.156 139.585 454.877 140.148 454.877 140.835  c
454.877 141.512 455.127 142.119 455.627 142.656  c
456.127 143.192 457.054 143.846 458.408 144.616  c
h
456.658 146.351 m
455.690 147.101 455.031 147.754 454.682 148.312  c
454.333 148.869 454.158 149.559 454.158 150.382  c
454.158 151.424 454.492 152.262 455.158 152.898  c
455.825 153.533 456.705 153.851 457.799 153.851  c
458.851 153.851 459.708 153.580 460.369 153.038  c
461.031 152.497 461.362 151.788 461.362 150.913  c
461.362 150.215 461.156 149.624 460.744 149.140  c
460.333 148.656 459.539 148.064 458.362 147.366  c
456.658 146.351 l
h
f
0 J
1.45000 M
newpath
492.500 146.000 m
492.500 165.330 476.830 181.000 457.500 181.000  c
438.170 181.000 422.500 165.330 422.500 146.000  c
422.500 126.670 438.170 111.000 457.500 111.000  c
476.830 111.000 492.500 126.670 492.500 146.000  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
29.3616 355.835 m
29.3616 354.023 l
32.9709 354.023 l
32.9709 339.773 l
29.3616 340.679 l
29.3616 338.820 l
35.3928 337.320 l
35.3928 354.023 l
39.0022 354.023 l
39.0022 355.835 l
29.3616 355.835 l
h
f
0 J
1.45000 M
newpath
68.5000 346.625 m
68.5000 365.955 52.8300 381.625 33.5000 381.625  c
14.1700 381.625 -1.50000 365.955 -1.50000 346.625  c
-1.50000 327.295 14.1700 311.625 33.5000 311.625  c
52.8300 311.625 68.5000 327.295 68.5000 346.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
165.674 355.835 m
165.674 353.726 l
166.372 352.090 167.789 350.309 169.924 348.382  c
171.299 347.148 l
173.070 345.544 173.955 343.950 173.955 342.366  c
173.955 341.356 173.653 340.562 173.049 339.984  c
172.445 339.406 171.612 339.116 170.549 339.116  c
169.299 339.116 167.825 339.601 166.127 340.570  c
166.127 338.445 l
167.731 337.695 169.320 337.320 170.893 337.320  c
172.591 337.320 173.953 337.775 174.979 338.687  c
176.005 339.598 176.518 340.804 176.518 342.304  c
176.518 343.387 176.257 344.348 175.737 345.187  c
175.216 346.025 174.252 347.044 172.846 348.241  c
171.924 349.038 l
169.997 350.674 168.882 352.236 168.580 353.726  c
176.424 353.726 l
176.424 355.835 l
165.674 355.835 l
h
f
0 J
1.45000 M
newpath
206.500 346.625 m
206.500 365.955 190.830 381.625 171.500 381.625  c
152.170 381.625 136.500 365.955 136.500 346.625  c
136.500 327.295 152.170 311.625 171.500 311.625  c
190.830 311.625 206.500 327.295 206.500 346.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
35.0022 472.835 m
35.0022 467.726 l
26.8772 467.726 l
26.8772 465.898 l
35.0022 454.773 l
37.2678 454.773 l
37.2678 465.757 l
39.6897 465.757 l
39.6897 467.726 l
37.2678 467.726 l
37.2678 472.835 l
35.0022 472.835 l
h
29.2366 465.757 m
35.1741 465.757 l
35.1741 457.726 l
29.2366 465.757 l
h
f
0 J
1.45000 M
newpath
68.5000 463.625 m
68.5000 482.955 52.8300 498.625 33.5000 498.625  c
14.1700 498.625 -1.50000 482.955 -1.50000 463.625  c
-1.50000 444.295 14.1700 428.625 33.5000 428.625  c
52.8300 428.625 68.5000 444.295 68.5000 463.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
166.143 472.695 m
166.143 470.460 l
167.862 471.137 169.216 471.476 170.205 471.476  c
171.362 471.476 172.299 471.140 173.018 470.468  c
173.737 469.796 174.096 468.929 174.096 467.866  c
174.096 465.325 172.315 464.054 168.752 464.054  c
167.815 464.054 l
167.815 462.429 l
168.643 462.429 l
171.987 462.429 173.658 461.252 173.658 458.898  c
173.658 457.044 172.559 456.116 170.362 456.116  c
169.153 456.116 167.825 456.455 166.377 457.132  c
166.377 455.038 l
167.804 454.559 169.190 454.320 170.533 454.320  c
174.221 454.320 176.065 455.715 176.065 458.507  c
176.065 460.632 174.809 462.142 172.299 463.038  c
175.216 463.715 176.674 465.314 176.674 467.835  c
176.674 469.533 176.112 470.866 174.987 471.835  c
173.862 472.804 172.320 473.288 170.362 473.288  c
169.247 473.288 167.841 473.090 166.143 472.695  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
206.500 463.625 m
206.500 482.955 190.830 498.625 171.500 498.625  c
152.170 498.625 136.500 482.955 136.500 463.625  c
136.500 444.295 152.170 428.625 171.500 428.625  c
190.830 428.625 206.500 444.295 206.500 463.625  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
95.6428 553.163 m
95.6428 551.007 l
96.8303 551.486 97.9657 551.726 99.0491 551.726  c
100.237 551.726 101.171 551.377 101.854 550.679  c
102.536 549.981 102.877 549.017 102.877 547.788  c
102.877 545.080 101.007 543.726 97.2678 543.726  c
96.8512 543.726 96.4084 543.752 95.9397 543.804  c
95.9397 535.023 l
105.080 535.023 l
105.080 537.116 l
98.0491 537.116 l
98.0491 541.882 l
100.372 541.882 102.184 542.413 103.487 543.476  c
104.789 544.538 105.440 546.017 105.440 547.913  c
105.440 549.663 104.849 551.038 103.666 552.038  c
102.484 553.038 100.841 553.538 98.7366 553.538  c
97.8199 553.538 96.7887 553.413 95.6428 553.163  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
135.500 543.875 m
135.500 563.205 119.830 578.875 100.500 578.875  c
81.1700 578.875 65.5000 563.205 65.5000 543.875  c
65.5000 524.545 81.1700 508.875 100.500 508.875  c
119.830 508.875 135.500 524.545 135.500 543.875  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
29.8928 621.604 m
31.0387 620.115 32.4814 619.370 34.2209 619.370  c
35.8043 619.370 37.0986 619.894 38.1038 620.940  c
39.1090 621.987 39.6116 623.328 39.6116 624.964  c
39.6116 626.839 39.0465 628.383 37.9163 629.597  c
36.7861 630.810 35.3564 631.417 33.6272 631.417  c
31.6376 631.417 30.0803 630.615 28.9553 629.011  c
27.8303 627.407 27.2678 625.183 27.2678 622.339  c
27.2678 619.203 27.9137 616.769 29.2053 615.034  c
30.4970 613.300 32.3147 612.433 34.6584 612.433  c
35.7314 612.433 37.0751 612.662 38.6897 613.120  c
38.6897 615.214 l
36.9814 614.568 35.5855 614.245 34.5022 614.245  c
31.4293 614.245 29.8928 616.698 29.8928 621.604  c
h
37.1897 625.495 m
37.1897 624.131 36.8824 623.058 36.2678 622.276  c
35.6532 621.495 34.8043 621.104 33.7209 621.104  c
32.7001 621.104 31.8225 621.446 31.0881 622.128  c
30.3538 622.810 29.9866 623.631 29.9866 624.589  c
29.9866 626.099 30.3355 627.313 31.0334 628.229  c
31.7314 629.146 32.6532 629.604 33.7991 629.604  c
34.8303 629.604 35.6532 629.232 36.2678 628.487  c
36.8824 627.743 37.1897 626.745 37.1897 625.495  c
h
f
0 J
1.45000 M
newpath
68.5000 621.754 m
68.5000 641.084 52.8300 656.754 33.5000 656.754  c
14.1700 656.754 -1.50000 641.084 -1.50000 621.754  c
-1.50000 602.424 14.1700 586.754 33.5000 586.754  c
52.8300 586.754 68.5000 602.424 68.5000 621.754  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
157.629 630.964 m
157.859 629.558 158.192 628.341 158.629 627.315  c
159.067 626.289 159.838 624.881 160.942 623.089  c
165.879 615.151 l
156.567 615.151 l
156.567 612.901 l
168.176 612.901 l
168.176 615.151 l
163.541 621.985 160.947 627.256 160.395 630.964  c
157.629 630.964 l
h
f
0 J
1.45000 M
newpath
196.768 621.754 m
196.768 641.084 181.098 656.754 161.768 656.754  c
142.438 656.754 126.768 641.084 126.768 621.754  c
126.768 602.424 142.438 586.754 161.768 586.754  c
181.098 586.754 196.768 602.424 196.768 621.754  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
193.346 543.241 m
191.575 542.012 190.690 540.653 190.690 539.163  c
190.690 537.799 191.192 536.689 192.198 535.835  c
193.203 534.981 194.507 534.554 196.112 534.554  c
197.601 534.554 198.809 534.916 199.737 535.640  c
200.664 536.364 201.127 537.304 201.127 538.460  c
201.127 540.210 200.002 541.804 197.752 543.241  c
200.481 544.575 201.846 546.299 201.846 548.413  c
201.846 549.924 201.273 551.156 200.127 552.109  c
198.981 553.062 197.507 553.538 195.705 553.538  c
193.924 553.538 192.487 553.088 191.393 552.187  c
190.299 551.286 189.752 550.106 189.752 548.648  c
189.752 546.481 190.950 544.679 193.346 543.241  c
h
196.408 542.491 m
198.096 541.387 198.940 540.153 198.940 538.788  c
198.940 538.070 198.658 537.486 198.096 537.038  c
197.533 536.590 196.794 536.366 195.877 536.366  c
194.992 536.366 194.270 536.585 193.713 537.023  c
193.156 537.460 192.877 538.023 192.877 538.710  c
192.877 539.387 193.127 539.994 193.627 540.531  c
194.127 541.067 195.054 541.721 196.408 542.491  c
h
194.658 544.226 m
193.690 544.976 193.031 545.629 192.682 546.187  c
192.333 546.744 192.158 547.434 192.158 548.257  c
192.158 549.299 192.492 550.137 193.158 550.773  c
193.825 551.408 194.705 551.726 195.799 551.726  c
196.851 551.726 197.708 551.455 198.369 550.913  c
199.031 550.372 199.362 549.663 199.362 548.788  c
199.362 548.090 199.156 547.499 198.744 547.015  c
198.333 546.531 197.539 545.939 196.362 545.241  c
194.658 544.226 l
h
f
0 J
1.45000 M
newpath
230.500 543.875 m
230.500 563.205 214.830 578.875 195.500 578.875  c
176.170 578.875 160.500 563.205 160.500 543.875  c
160.500 524.545 176.170 508.875 195.500 508.875  c
214.830 508.875 230.500 524.545 230.500 543.875  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
291.362 355.835 m
291.362 354.023 l
294.971 354.023 l
294.971 339.773 l
291.362 340.679 l
291.362 338.820 l
297.393 337.320 l
297.393 354.023 l
301.002 354.023 l
301.002 355.835 l
291.362 355.835 l
h
f
0 J
1.45000 M
newpath
330.500 346.625 m
330.500 365.955 314.830 381.625 295.500 381.625  c
276.170 381.625 260.500 365.955 260.500 346.625  c
260.500 327.295 276.170 311.625 295.500 311.625  c
314.830 311.625 330.500 327.295 330.500 346.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
427.674 355.835 m
427.674 353.726 l
428.372 352.090 429.789 350.309 431.924 348.382  c
433.299 347.148 l
435.070 345.544 435.955 343.950 435.955 342.366  c
435.955 341.356 435.653 340.562 435.049 339.984  c
434.445 339.406 433.612 339.116 432.549 339.116  c
431.299 339.116 429.825 339.601 428.127 340.570  c
428.127 338.445 l
429.731 337.695 431.320 337.320 432.893 337.320  c
434.591 337.320 435.953 337.775 436.979 338.687  c
438.005 339.598 438.518 340.804 438.518 342.304  c
438.518 343.387 438.257 344.348 437.737 345.187  c
437.216 346.025 436.252 347.044 434.846 348.241  c
433.924 349.038 l
431.997 350.674 430.882 352.236 430.580 353.726  c
438.424 353.726 l
438.424 355.835 l
427.674 355.835 l
h
f
0 J
1.45000 M
newpath
468.500 346.625 m
468.500 365.955 452.830 381.625 433.500 381.625  c
414.170 381.625 398.500 365.955 398.500 346.625  c
398.500 327.295 414.170 311.625 433.500 311.625  c
452.830 311.625 468.500 327.295 468.500 346.625  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
297.002 472.835 m
297.002 467.726 l
288.877 467.726 l
288.877 465.898 l
297.002 454.773 l
299.268 454.773 l
299.268 465.757 l
301.690 465.757 l
301.690 467.726 l
299.268 467.726 l
299.268 472.835 l
297.002 472.835 l
h
291.237 465.757 m
297.174 465.757 l
297.174 457.726 l
291.237 465.757 l
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
330.500 463.625 m
330.500 482.955 314.830 498.625 295.500 498.625  c
276.170 498.625 260.500 482.955 260.500 463.625  c
260.500 444.295 276.170 428.625 295.500 428.625  c
314.830 428.625 330.500 444.295 330.500 463.625  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
428.143 472.695 m
428.143 470.460 l
429.862 471.137 431.216 471.476 432.205 471.476  c
433.362 471.476 434.299 471.140 435.018 470.468  c
435.737 469.796 436.096 468.929 436.096 467.866  c
436.096 465.325 434.315 464.054 430.752 464.054  c
429.815 464.054 l
429.815 462.429 l
430.643 462.429 l
433.987 462.429 435.658 461.252 435.658 458.898  c
435.658 457.044 434.559 456.116 432.362 456.116  c
431.153 456.116 429.825 456.455 428.377 457.132  c
428.377 455.038 l
429.804 454.559 431.190 454.320 432.533 454.320  c
436.221 454.320 438.065 455.715 438.065 458.507  c
438.065 460.632 436.809 462.142 434.299 463.038  c
437.216 463.715 438.674 465.314 438.674 467.835  c
438.674 469.533 438.112 470.866 436.987 471.835  c
435.862 472.804 434.320 473.288 432.362 473.288  c
431.247 473.288 429.841 473.090 428.143 472.695  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
468.500 463.625 m
468.500 482.955 452.830 498.625 433.500 498.625  c
414.170 498.625 398.500 482.955 398.500 463.625  c
398.500 444.295 414.170 428.625 433.500 428.625  c
452.830 428.625 468.500 444.295 468.500 463.625  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
357.643 553.163 m
357.643 551.007 l
358.830 551.486 359.966 551.726 361.049 551.726  c
362.237 551.726 363.171 551.377 363.854 550.679  c
364.536 549.981 364.877 549.017 364.877 547.788  c
364.877 545.080 363.007 543.726 359.268 543.726  c
358.851 543.726 358.408 543.752 357.940 543.804  c
357.940 535.023 l
367.080 535.023 l
367.080 537.116 l
360.049 537.116 l
360.049 541.882 l
362.372 541.882 364.184 542.413 365.487 543.476  c
366.789 544.538 367.440 546.017 367.440 547.913  c
367.440 549.663 366.849 551.038 365.666 552.038  c
364.484 553.038 362.841 553.538 360.737 553.538  c
359.820 553.538 358.789 553.413 357.643 553.163  c
h
f
0 J
1.45000 M
1.00000 0.00000 0.00000 RG
newpath
397.500 543.875 m
397.500 563.205 381.830 578.875 362.500 578.875  c
343.170 578.875 327.500 563.205 327.500 543.875  c
327.500 524.545 343.170 508.875 362.500 508.875  c
381.830 508.875 397.500 524.545 397.500 543.875  c
h
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.60000 M
10.0000 M
newpath
291.893 623.976 m
293.039 622.486 294.481 621.741 296.221 621.741  c
297.804 621.741 299.099 622.265 300.104 623.312  c
301.109 624.359 301.612 625.700 301.612 627.335  c
301.612 629.210 301.046 630.754 299.916 631.968  c
298.786 633.182 297.356 633.788 295.627 633.788  c
293.638 633.788 292.080 632.986 290.955 631.382  c
289.830 629.778 289.268 627.554 289.268 624.710  c
289.268 621.575 289.914 619.140 291.205 617.406  c
292.497 615.671 294.315 614.804 296.658 614.804  c
297.731 614.804 299.075 615.033 300.690 615.491  c
300.690 617.585 l
298.981 616.939 297.586 616.616 296.502 616.616  c
293.429 616.616 291.893 619.070 291.893 623.976  c
h
299.190 627.866 m
299.190 626.502 298.882 625.429 298.268 624.648  c
297.653 623.866 296.804 623.476 295.721 623.476  c
294.700 623.476 293.823 623.817 293.088 624.499  c
292.354 625.182 291.987 626.002 291.987 626.960  c
291.987 628.471 292.336 629.684 293.033 630.601  c
293.731 631.517 294.653 631.976 295.799 631.976  c
296.830 631.976 297.653 631.603 298.268 630.859  c
298.882 630.114 299.190 629.116 299.190 627.866  c
h
f
0 J
1.45000 M
newpath
330.500 624.125 m
330.500 643.455 314.830 659.125 295.500 659.125  c
276.170 659.125 260.500 643.455 260.500 624.125  c
260.500 604.795 276.170 589.125 295.500 589.125  c
314.830 589.125 330.500 604.795 330.500 624.125  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
425.094 633.335 m
425.323 631.929 425.656 630.713 426.094 629.687  c
426.531 628.661 427.302 627.252 428.406 625.460  c
433.344 617.523 l
424.031 617.523 l
424.031 615.273 l
435.641 615.273 l
435.641 617.523 l
431.005 624.356 428.411 629.627 427.859 633.335  c
425.094 633.335 l
h
f
0 J
1.45000 M
newpath
464.232 624.125 m
464.232 643.455 448.562 659.125 429.232 659.125  c
409.902 659.125 394.232 643.455 394.232 624.125  c
394.232 604.795 409.902 589.125 429.232 589.125  c
448.562 589.125 464.232 604.795 464.232 624.125  c
h
S
2 J
10.0000 M
1.60000 M
10.0000 M
newpath
455.346 543.241 m
453.575 542.012 452.690 540.653 452.690 539.163  c
452.690 537.799 453.192 536.689 454.198 535.835  c
455.203 534.981 456.507 534.554 458.112 534.554  c
459.601 534.554 460.809 534.916 461.737 535.640  c
462.664 536.364 463.127 537.304 463.127 538.460  c
463.127 540.210 462.002 541.804 459.752 543.241  c
462.481 544.575 463.846 546.299 463.846 548.413  c
463.846 549.924 463.273 551.156 462.127 552.109  c
460.981 553.062 459.507 553.538 457.705 553.538  c
455.924 553.538 454.487 553.088 453.393 552.187  c
452.299 551.286 451.752 550.106 451.752 548.648  c
451.752 546.481 452.950 544.679 455.346 543.241  c
h
458.408 542.491 m
460.096 541.387 460.940 540.153 460.940 538.788  c
460.940 538.070 460.658 537.486 460.096 537.038  c
459.533 536.590 458.794 536.366 457.877 536.366  c
456.992 536.366 456.270 536.585 455.713 537.023  c
455.156 537.460 454.877 538.023 454.877 538.710  c
454.877 539.387 455.127 539.994 455.627 540.531  c
456.127 541.067 457.054 541.721 458.408 542.491  c
h
456.658 544.226 m
455.690 544.976 455.031 545.629 454.682 546.187  c
454.333 546.744 454.158 547.434 454.158 548.257  c
454.158 549.299 454.492 550.137 455.158 550.773  c
455.825 551.408 456.705 551.726 457.799 551.726  c
458.851 551.726 459.708 551.455 460.369 550.913  c
461.031 550.372 461.362 549.663 461.362 548.788  c
461.362 548.090 461.156 547.499 460.744 547.015  c
460.333 546.531 459.539 545.939 458.362 545.241  c
456.658 544.226 l
h
f
0 J
1.45000 M
newpath
492.500 543.875 m
492.500 563.205 476.830 578.875 457.500 578.875  c
438.170 578.875 422.500 563.205 422.500 543.875  c
422.500 524.545 438.170 508.875 457.500 508.875  c
476.830 508.875 492.500 524.545 492.500 543.875  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 -51.2500 m
136.500 -51.2500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
33.5000 30.7500 m
33.5000 -16.2500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
60.1965 43.1160 m
144.804 -28.6160 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
171.500 -16.2500 m
171.500 30.7500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 65.7500 m
136.500 65.7500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
60.1965 -28.6160 m
144.804 43.1160 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
148.308 91.9633 m
123.692 119.787 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
55.9311 92.6171 m
78.0689 119.133 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
78.6158 173.314 m
55.3842 202.311 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
119.486 175.403 m
135.514 200.222 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 229.625 m
119.500 229.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
135.500 146.000 m
160.500 146.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
330.500 -51.2500 m
398.500 -51.2500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
295.500 30.7500 m
295.500 -16.2500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
322.197 43.1160 m
406.803 -28.6160 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
433.500 -16.2500 m
433.500 30.7500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
330.500 65.7500 m
398.500 65.7500 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
322.197 -28.6160 m
406.803 43.1160 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
410.308 91.9633 m
385.692 119.787 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
317.931 92.6171 m
340.069 119.133 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
340.616 173.314 m
317.384 202.311 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
384.966 172.838 m
410.034 202.787 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
330.500 229.625 m
397.500 229.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
397.500 146.000 m
422.500 146.000 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 346.625 m
136.500 346.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
33.5000 428.625 m
33.5000 381.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
60.1965 440.991 m
144.804 369.259 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
171.500 381.625 m
171.500 428.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 463.625 m
136.500 463.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
60.1965 369.259 m
144.804 440.991 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
148.308 489.838 m
123.692 517.662 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
55.9311 490.492 m
78.0689 517.008 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
77.6739 570.407 m
56.3261 595.221 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
122.141 571.383 m
140.127 594.246 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
68.5000 621.754 m
126.768 621.754 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
135.500 543.875 m
160.500 543.875 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
330.500 346.625 m
398.500 346.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
295.500 428.625 m
295.500 381.625 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
322.197 440.991 m
406.803 369.259 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
433.500 381.625 m
433.500 428.625 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
330.500 463.625 m
398.500 463.625 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
322.197 369.259 m
406.803 440.991 l
S
2 J
10.0000 M
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
410.308 489.838 m
385.692 517.662 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
317.931 490.492 m
340.069 517.008 l
S
2 J
10.0000 M
0.00000 0.00000 0.00000 RG
0 J
1.45000 M
newpath
340.069 570.742 m
317.931 597.258 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
384.878 570.786 m
406.854 597.214 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
330.500 624.125 m
394.232 624.125 l
S
2 J
10.0000 M
0 J
1.45000 M
newpath
397.500 543.875 m
422.500 543.875 l
S
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
end end restore showpage

%%Trailer
%%EOF
