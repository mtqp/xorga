%!PS-Adobe-2.0
%%Title: resultados.eps
%%Creator: gnuplot 4.2 patchlevel 2 
%%CreationDate: Tue Jun 29 21:32:03 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (resultados.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 2 )
  /Author (Daniel Ignacio Grosso)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 29 21:32:03 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
630 420 M
63 0 V
6269 0 R
-63 0 V
stroke
546 420 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
630 1056 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1056 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MRshow
1.000 UL
LTb
630 1692 M
63 0 V
6269 0 R
-63 0 V
stroke
546 1692 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MRshow
1.000 UL
LTb
630 2328 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2328 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MRshow
1.000 UL
LTb
630 2964 M
63 0 V
6269 0 R
-63 0 V
stroke
546 2964 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
630 3600 M
63 0 V
6269 0 R
-63 0 V
stroke
546 3600 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MRshow
1.000 UL
LTb
630 4236 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4236 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
630 4872 M
63 0 V
6269 0 R
-63 0 V
stroke
546 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35)]
] -46.7 MRshow
1.000 UL
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
stroke
630 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1422 420 M
0 63 V
0 4389 R
0 -63 V
stroke
1422 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2213 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2213 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
3005 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3005 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
3796 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3796 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
4588 420 M
0 63 V
0 4389 R
0 -63 V
stroke
4588 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 500)]
] -46.7 MCshow
1.000 UL
LTb
5379 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5379 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 600)]
] -46.7 MCshow
1.000 UL
LTb
6171 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6171 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 700)]
] -46.7 MCshow
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 800)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (tiempo \(segundos\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3796 70 M
[ [(Helvetica) 140.0 0.0 true true 0 (cantidad de nodos)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LTb
714 4109 N
0 700 V
903 0 V
0 -700 V
-903 0 V
Z stroke
714 4809 M
903 0 V
1.000 UP
stroke
LT0
LTb
1050 4739 M
[ [(Helvetica) 140.0 0.0 true true 0 (20%)]
] -46.7 MRshow
LT0
638 420 Pls
701 420 Pls
765 420 Pls
828 420 Pls
891 420 Pls
955 420 Pls
1018 420 Pls
1081 420 Pls
1144 420 Pls
1208 420 Pls
1271 420 Pls
1334 420 Pls
1398 420 Pls
1461 420 Pls
1524 420 Pls
1588 420 Pls
1651 420 Pls
1714 420 Pls
1778 420 Pls
1841 420 Pls
1904 420 Pls
1968 420 Pls
2031 420 Pls
2094 420 Pls
2158 420 Pls
2221 420 Pls
2284 420 Pls
2348 420 Pls
2411 420 Pls
2474 420 Pls
2538 420 Pls
2601 420 Pls
2664 420 Pls
2727 420 Pls
2791 420 Pls
2854 420 Pls
2917 420 Pls
2981 421 Pls
3044 420 Pls
3107 420 Pls
3171 420 Pls
3234 421 Pls
3297 421 Pls
3361 421 Pls
3424 424 Pls
3487 486 Pls
3551 487 Pls
3614 523 Pls
3677 431 Pls
3741 531 Pls
3804 490 Pls
3867 503 Pls
3931 561 Pls
3994 504 Pls
4057 550 Pls
4121 536 Pls
4184 543 Pls
4247 519 Pls
4310 524 Pls
4374 527 Pls
4437 533 Pls
4500 548 Pls
4564 612 Pls
4627 611 Pls
4690 624 Pls
4754 564 Pls
4817 631 Pls
4880 575 Pls
4944 634 Pls
5007 639 Pls
5070 622 Pls
5134 662 Pls
5197 627 Pls
5260 655 Pls
5324 716 Pls
5387 662 Pls
5450 799 Pls
5514 673 Pls
5577 733 Pls
5640 761 Pls
5704 950 Pls
5767 770 Pls
5830 872 Pls
5893 855 Pls
5957 757 Pls
6020 911 Pls
6083 854 Pls
6147 831 Pls
6210 898 Pls
6273 911 Pls
6337 1023 Pls
6400 803 Pls
6463 1351 Pls
6527 1200 Pls
6590 1045 Pls
6653 1391 Pls
6717 992 Pls
6780 950 Pls
6843 1022 Pls
6907 1017 Pls
1333 4739 Pls
1.000 UP
1.000 UL
LT1
LTb
1050 4599 M
[ [(Helvetica) 140.0 0.0 true true 0 (40%)]
] -46.7 MRshow
LT1
638 420 Crs
701 420 Crs
765 420 Crs
828 420 Crs
891 420 Crs
955 420 Crs
1018 420 Crs
1081 420 Crs
1144 420 Crs
1208 420 Crs
1271 420 Crs
1334 420 Crs
1398 420 Crs
1461 420 Crs
1524 420 Crs
1588 420 Crs
1651 420 Crs
1714 420 Crs
1778 420 Crs
1841 420 Crs
1904 420 Crs
1968 420 Crs
2031 420 Crs
2094 420 Crs
2158 420 Crs
2221 420 Crs
2284 420 Crs
2348 420 Crs
2411 420 Crs
2474 420 Crs
2538 420 Crs
2601 421 Crs
2664 420 Crs
2727 421 Crs
2791 421 Crs
2854 420 Crs
2917 421 Crs
2981 529 Crs
3044 484 Crs
3107 537 Crs
3171 542 Crs
3234 519 Crs
3297 540 Crs
3361 506 Crs
3424 550 Crs
3487 548 Crs
3551 536 Crs
3614 557 Crs
3677 575 Crs
3741 1081 Crs
3804 554 Crs
3867 655 Crs
3931 669 Crs
3994 602 Crs
4057 655 Crs
4121 616 Crs
4184 679 Crs
4247 639 Crs
4310 714 Crs
4374 683 Crs
4437 715 Crs
4500 724 Crs
4564 751 Crs
4627 794 Crs
4690 788 Crs
4754 741 Crs
4817 830 Crs
4880 963 Crs
4944 964 Crs
5007 912 Crs
5070 813 Crs
5134 894 Crs
5197 894 Crs
5260 935 Crs
5324 907 Crs
5387 896 Crs
5450 1242 Crs
5514 999 Crs
5577 973 Crs
5640 1101 Crs
5704 1142 Crs
5767 1209 Crs
5830 1384 Crs
5893 1522 Crs
5957 1178 Crs
6020 1528 Crs
6083 1260 Crs
6147 1191 Crs
6210 2072 Crs
6273 1424 Crs
6337 1619 Crs
6400 1182 Crs
6463 1450 Crs
6527 2154 Crs
6590 2144 Crs
6653 2328 Crs
6717 1687 Crs
6780 1598 Crs
6843 1579 Crs
6907 1548 Crs
1333 4599 Crs
1.000 UP
1.000 UL
LT2
LTb
1050 4459 M
[ [(Helvetica) 140.0 0.0 true true 0 (60%)]
] -46.7 MRshow
LT2
638 420 Star
701 420 Star
765 420 Star
828 420 Star
891 420 Star
955 420 Star
1018 420 Star
1081 420 Star
1144 420 Star
1208 420 Star
1271 420 Star
1334 420 Star
1398 420 Star
1461 420 Star
1524 420 Star
1588 420 Star
1651 420 Star
1714 420 Star
1778 420 Star
1841 420 Star
1904 420 Star
1968 420 Star
2031 420 Star
2094 420 Star
2158 420 Star
2221 420 Star
2284 420 Star
2348 420 Star
2411 420 Star
2474 420 Star
2538 504 Star
2601 493 Star
2664 420 Star
2727 484 Star
2791 490 Star
2854 536 Star
2917 617 Star
2981 529 Star
3044 512 Star
3107 593 Star
3171 529 Star
3234 537 Star
3297 596 Star
3361 635 Star
3424 588 Star
3487 587 Star
3551 592 Star
3614 621 Star
3677 620 Star
3741 751 Star
3804 618 Star
3867 766 Star
3931 746 Star
3994 863 Star
4057 763 Star
4121 711 Star
4184 757 Star
4247 710 Star
4310 851 Star
4374 809 Star
4437 803 Star
4500 816 Star
4564 907 Star
4627 981 Star
4690 889 Star
4754 1364 Star
4817 986 Star
4880 1039 Star
4944 1116 Star
5007 1062 Star
5070 1000 Star
5134 1125 Star
5197 1039 Star
5260 1083 Star
5324 1127 Star
5387 1125 Star
5450 1310 Star
5514 1177 Star
5577 1234 Star
5640 1438 Star
5704 1356 Star
5767 1453 Star
5830 1840 Star
5893 2044 Star
5957 1407 Star
6020 2511 Star
6083 1668 Star
6147 2351 Star
6210 1707 Star
6273 2549 Star
6337 2217 Star
6400 1562 Star
6463 2914 Star
6527 2666 Star
6590 2933 Star
6653 3109 Star
6717 2113 Star
6780 2930 Star
6843 2135 Star
6907 2076 Star
1333 4459 Star
1.000 UP
1.000 UL
LT3
LTb
1050 4319 M
[ [(Helvetica) 140.0 0.0 true true 0 (80%)]
] -46.7 MRshow
LT3
638 420 Box
701 420 Box
765 420 Box
828 420 Box
891 420 Box
955 420 Box
1018 420 Box
1081 420 Box
1144 420 Box
1208 420 Box
1271 420 Box
1334 420 Box
1398 420 Box
1461 420 Box
1524 420 Box
1588 420 Box
1651 420 Box
1714 420 Box
1778 420 Box
1841 420 Box
1904 420 Box
1968 420 Box
2031 420 Box
2094 420 Box
2158 420 Box
2221 420 Box
2284 420 Box
2348 420 Box
2411 420 Box
2474 484 Box
2538 493 Box
2601 514 Box
2664 484 Box
2727 513 Box
2791 512 Box
2854 573 Box
2917 710 Box
2981 659 Box
3044 540 Box
3107 650 Box
3171 580 Box
3234 593 Box
3297 650 Box
3361 702 Box
3424 812 Box
3487 664 Box
3551 646 Box
3614 683 Box
3677 715 Box
3741 814 Box
3804 681 Box
3867 879 Box
3931 906 Box
3994 1076 Box
4057 875 Box
4121 802 Box
4184 919 Box
4247 852 Box
4310 983 Box
4374 931 Box
4437 987 Box
4500 1015 Box
4564 1062 Box
4627 1168 Box
4690 1122 Box
4754 1165 Box
4817 1160 Box
4880 1232 Box
4944 1458 Box
5007 1644 Box
5070 1190 Box
5134 1355 Box
5197 1360 Box
5260 1421 Box
5324 1351 Box
5387 1356 Box
5450 2350 Box
5514 1569 Box
5577 1496 Box
5640 1778 Box
5704 1799 Box
5767 1992 Box
5830 2290 Box
5893 3220 Box
5957 2523 Box
6020 3348 Box
6083 2075 Box
6147 2950 Box
6210 2357 Box
6273 3637 Box
6337 2814 Box
6400 2338 Box
6463 4169 Box
6527 3619 Box
6590 2626 Box
6653 3965 Box
6717 2960 Box
6780 4205 Box
6843 2691 Box
6907 2607 Box
1333 4319 Box
1.000 UP
1.000 UL
LT4
LTb
1050 4179 M
[ [(Helvetica) 140.0 0.0 true true 0 (100%)]
] -46.7 MRshow
LT4
638 420 BoxF
701 420 BoxF
765 420 BoxF
828 420 BoxF
891 420 BoxF
955 420 BoxF
1018 420 BoxF
1081 420 BoxF
1144 420 BoxF
1208 420 BoxF
1271 420 BoxF
1334 420 BoxF
1398 420 BoxF
1461 420 BoxF
1524 420 BoxF
1588 420 BoxF
1651 420 BoxF
1714 420 BoxF
1778 420 BoxF
1841 420 BoxF
1904 420 BoxF
1968 420 BoxF
2031 420 BoxF
2094 420 BoxF
2158 420 BoxF
2221 491 BoxF
2284 420 BoxF
2348 420 BoxF
2411 421 BoxF
2474 491 BoxF
2538 576 BoxF
2601 537 BoxF
2664 493 BoxF
2727 526 BoxF
2791 536 BoxF
2854 611 BoxF
2917 612 BoxF
2981 565 BoxF
3044 570 BoxF
3107 706 BoxF
3171 597 BoxF
3234 610 BoxF
3297 669 BoxF
3361 770 BoxF
3424 850 BoxF
3487 678 BoxF
3551 790 BoxF
3614 869 BoxF
3677 743 BoxF
3741 852 BoxF
3804 747 BoxF
3867 990 BoxF
3931 956 BoxF
3994 1139 BoxF
4057 985 BoxF
4121 894 BoxF
4184 953 BoxF
4247 901 BoxF
4310 1122 BoxF
4374 1060 BoxF
4437 1043 BoxF
4500 1069 BoxF
4564 1195 BoxF
4627 1349 BoxF
4690 1178 BoxF
4754 1224 BoxF
4817 1331 BoxF
4880 1321 BoxF
4944 1550 BoxF
5007 1738 BoxF
5070 1380 BoxF
5134 1586 BoxF
5197 1450 BoxF
5260 1514 BoxF
5324 1572 BoxF
5387 1592 BoxF
5450 2514 BoxF
5514 1681 BoxF
5577 1757 BoxF
5640 2286 BoxF
5704 1910 BoxF
5767 2135 BoxF
5830 2746 BoxF
5893 3877 BoxF
5957 2696 BoxF
6020 3568 BoxF
6083 2482 BoxF
6147 2570 BoxF
6210 2515 BoxF
6273 3909 BoxF
6337 3423 BoxF
6400 2791 BoxF
6463 4190 BoxF
6527 3867 BoxF
6590 3119 BoxF
6653 4345 BoxF
6717 3162 BoxF
6780 4507 BoxF
6843 3248 BoxF
6907 3138 BoxF
1333 4179 BoxF
1.000 UL
LTb
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
